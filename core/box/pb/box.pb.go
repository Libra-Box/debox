// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: box.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// response code
type Code int32

const (
	Code_Success           Code = 0  // 成功
	Code_Failure           Code = 1  // 失败
	Code_InvalidSignature  Code = 2  // 无效的签名
	Code_TokenError        Code = 3  // token 错误
	Code_TokenExpired      Code = 4  // token 过期
	Code_DeviceActivated   Code = 5  // 设备已经激活
	Code_DbError           Code = 6  // 数据库操纵失败
	Code_IoError           Code = 7  // 文件操纵失败
	Code_UserPassError     Code = 8  // 用户名或者密码错误
	Code_RequestParamError Code = 9  // 请求参数错误
	Code_NoEnoughSpace     Code = 10 // 可用空间不足
	Code_NetworkError      Code = 11 // 网络错误
	Code_RequestTimeout    Code = 12 // 请求超时
	Code_UserDisabled      Code = 13 // 账户禁用
	Code_UserCountIsOver   Code = 14 //账户数量已满
	Code_FileNameExist     Code = 15 //文件名已存在
	Code_UserNameNotExist  Code = 16 //用户不存在
	Code_SystemFile        Code = 17 //系统文件
	Code_BackingUp         Code = 18 //正在备份
	Code_Md5IsExist        Code = 19 //md5存在
	Code_SizeInsufficient  Code = 20 //容量不够
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0:  "Success",
		1:  "Failure",
		2:  "InvalidSignature",
		3:  "TokenError",
		4:  "TokenExpired",
		5:  "DeviceActivated",
		6:  "DbError",
		7:  "IoError",
		8:  "UserPassError",
		9:  "RequestParamError",
		10: "NoEnoughSpace",
		11: "NetworkError",
		12: "RequestTimeout",
		13: "UserDisabled",
		14: "UserCountIsOver",
		15: "FileNameExist",
		16: "UserNameNotExist",
		17: "SystemFile",
		18: "BackingUp",
		19: "Md5IsExist",
		20: "SizeInsufficient",
	}
	Code_value = map[string]int32{
		"Success":           0,
		"Failure":           1,
		"InvalidSignature":  2,
		"TokenError":        3,
		"TokenExpired":      4,
		"DeviceActivated":   5,
		"DbError":           6,
		"IoError":           7,
		"UserPassError":     8,
		"RequestParamError": 9,
		"NoEnoughSpace":     10,
		"NetworkError":      11,
		"RequestTimeout":    12,
		"UserDisabled":      13,
		"UserCountIsOver":   14,
		"FileNameExist":     15,
		"UserNameNotExist":  16,
		"SystemFile":        17,
		"BackingUp":         18,
		"Md5IsExist":        19,
		"SizeInsufficient":  20,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_box_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_box_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{0}
}

// protoc --gofast_out=. --proto_path=. *.proto
// protoc --go_out=. --proto_path=. *.proto
// protoc --js_out=import_style=commonjs,binary:. *.proto
// relay 代理传输
// "/box/relay/1.0.0"
// "http://122.9.61.5:9988/v1/box/relay/1.0.0"
type RelayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolId string `protobuf:"bytes,1,opt,name=ProtocolId,proto3" json:"ProtocolId,omitempty"`
	BodyBuffer []byte `protobuf:"bytes,2,opt,name=BodyBuffer,proto3" json:"BodyBuffer,omitempty"`
}

func (x *RelayReq) Reset() {
	*x = RelayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayReq) ProtoMessage() {}

func (x *RelayReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayReq.ProtoReflect.Descriptor instead.
func (*RelayReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{0}
}

func (x *RelayReq) GetProtocolId() string {
	if x != nil {
		return x.ProtocolId
	}
	return ""
}

func (x *RelayReq) GetBodyBuffer() []byte {
	if x != nil {
		return x.BodyBuffer
	}
	return nil
}

type RelayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolId string `protobuf:"bytes,1,opt,name=ProtocolId,proto3" json:"ProtocolId,omitempty"`
	BodyBuffer []byte `protobuf:"bytes,2,opt,name=BodyBuffer,proto3" json:"BodyBuffer,omitempty"`
	Code       uint32 `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *RelayResp) Reset() {
	*x = RelayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayResp) ProtoMessage() {}

func (x *RelayResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayResp.ProtoReflect.Descriptor instead.
func (*RelayResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{1}
}

func (x *RelayResp) GetProtocolId() string {
	if x != nil {
		return x.ProtocolId
	}
	return ""
}

func (x *RelayResp) GetBodyBuffer() []byte {
	if x != nil {
		return x.BodyBuffer
	}
	return nil
}

func (x *RelayResp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{2}
}

func (x *CommonResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *CommonResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *CommonResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// "/box/ping/1.0.0"
type PingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *PingReq) Reset() {
	*x = PingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReq) ProtoMessage() {}

func (x *PingReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReq.ProtoReflect.Descriptor instead.
func (*PingReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{3}
}

func (x *PingReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type PingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *PingResp) Reset() {
	*x = PingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResp) ProtoMessage() {}

func (x *PingResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResp.ProtoReflect.Descriptor instead.
func (*PingResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{4}
}

func (x *PingResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

////////////////////////////////////////////////////////////////////////
// 获取设备ipfs网络地址
// "/box/peer_address/1.0.0"
// Http Post Json : http://122.9.61.5:16516/v1/peer_addr
type PeerAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	PeerId string `protobuf:"bytes,2,opt,name=peerId,proto3" json:"peerId,omitempty"`
}

func (x *PeerAddressReq) Reset() {
	*x = PeerAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerAddressReq) ProtoMessage() {}

func (x *PeerAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerAddressReq.ProtoReflect.Descriptor instead.
func (*PeerAddressReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{5}
}

func (x *PeerAddressReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *PeerAddressReq) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type PeerAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce       uint32   `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code        Code     `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	PeerAddress []string `protobuf:"bytes,3,rep,name=peerAddress,proto3" json:"peerAddress,omitempty"`
	Msg         string   `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PeerAddressResp) Reset() {
	*x = PeerAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerAddressResp) ProtoMessage() {}

func (x *PeerAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerAddressResp.ProtoReflect.Descriptor instead.
func (*PeerAddressResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{6}
}

func (x *PeerAddressResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *PeerAddressResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *PeerAddressResp) GetPeerAddress() []string {
	if x != nil {
		return x.PeerAddress
	}
	return nil
}

func (x *PeerAddressResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

////////////////////////////////////////////////////////////////////////
// 用户数据
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Role           int32  `protobuf:"varint,3,opt,name=role,proto3" json:"role,omitempty"`
	AllocatedSpace uint64 `protobuf:"varint,4,opt,name=allocatedSpace,proto3" json:"allocatedSpace,omitempty"` //已分配空间
	UsedSpace      uint64 `protobuf:"varint,5,opt,name=usedSpace,proto3" json:"usedSpace,omitempty"`           //已使用空间
	Status         int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                 //用户状态: 0-可用  1-禁用
	DeviceName     string `protobuf:"bytes,7,opt,name=deviceName,proto3" json:"deviceName,omitempty"`          //最后登录的手机设备名称
	CreatedAt      int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`           //创建时间
	Password       string `protobuf:"bytes,9,opt,name=password,proto3" json:"password,omitempty"`              //密码，管理可以看到子账号的密码
	SyncFil        int32  `protobuf:"varint,10,opt,name=syncFil,proto3" json:"syncFil,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{7}
}

func (x *User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *User) GetAllocatedSpace() uint64 {
	if x != nil {
		return x.AllocatedSpace
	}
	return 0
}

func (x *User) GetUsedSpace() uint64 {
	if x != nil {
		return x.UsedSpace
	}
	return 0
}

func (x *User) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *User) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *User) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetSyncFil() int32 {
	if x != nil {
		return x.SyncFil
	}
	return 0
}

////////////////////////////////////////////////////////////////////////
// 磁盘空间
type DiskSpace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total          uint64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`                   //总空间
	AdminUsed      uint64 `protobuf:"varint,2,opt,name=adminUsed,proto3" json:"adminUsed,omitempty"`           //管理员已使用空间
	OtherAllocated uint64 `protobuf:"varint,3,opt,name=otherAllocated,proto3" json:"otherAllocated,omitempty"` //其他账号已分配
}

func (x *DiskSpace) Reset() {
	*x = DiskSpace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskSpace) ProtoMessage() {}

func (x *DiskSpace) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskSpace.ProtoReflect.Descriptor instead.
func (*DiskSpace) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{8}
}

func (x *DiskSpace) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DiskSpace) GetAdminUsed() uint64 {
	if x != nil {
		return x.AdminUsed
	}
	return 0
}

func (x *DiskSpace) GetOtherAllocated() uint64 {
	if x != nil {
		return x.OtherAllocated
	}
	return 0
}

////////////////////////////////////////////////////////////////////////
//  获取设备状态
// "/box/device/state/1.0.0"
type DeviceStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	PeerId string `protobuf:"bytes,2,opt,name=peerId,proto3" json:"peerId,omitempty"`
}

func (x *DeviceStateReq) Reset() {
	*x = DeviceStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceStateReq) ProtoMessage() {}

func (x *DeviceStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceStateReq.ProtoReflect.Descriptor instead.
func (*DeviceStateReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{9}
}

func (x *DeviceStateReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *DeviceStateReq) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type DeviceStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce       uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code        Code   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	State       int32  `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`            // 0-未激活 1-已经激活
	AdminName   string `protobuf:"bytes,4,opt,name=adminName,proto3" json:"adminName,omitempty"`     //  管理员昵称
	AdminAvatar []byte `protobuf:"bytes,5,opt,name=adminAvatar,proto3" json:"adminAvatar,omitempty"` // 管理员头像
}

func (x *DeviceStateResp) Reset() {
	*x = DeviceStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceStateResp) ProtoMessage() {}

func (x *DeviceStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceStateResp.ProtoReflect.Descriptor instead.
func (*DeviceStateResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{10}
}

func (x *DeviceStateResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *DeviceStateResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *DeviceStateResp) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *DeviceStateResp) GetAdminName() string {
	if x != nil {
		return x.AdminName
	}
	return ""
}

func (x *DeviceStateResp) GetAdminAvatar() []byte {
	if x != nil {
		return x.AdminAvatar
	}
	return nil
}

////////////////////////////////////////////////////////////////////////
//  激活设备
// "/box/activate/1.0.0"
type ActivateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	PeerId     string `protobuf:"bytes,2,opt,name=peerId,proto3" json:"peerId,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Password   string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	RandNonce  string `protobuf:"bytes,5,opt,name=randNonce,proto3" json:"randNonce,omitempty"`
	Signature  string `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	DeviceName string `protobuf:"bytes,7,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
}

func (x *ActivateReq) Reset() {
	*x = ActivateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateReq) ProtoMessage() {}

func (x *ActivateReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateReq.ProtoReflect.Descriptor instead.
func (*ActivateReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{11}
}

func (x *ActivateReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ActivateReq) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *ActivateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActivateReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ActivateReq) GetRandNonce() string {
	if x != nil {
		return x.RandNonce
	}
	return ""
}

func (x *ActivateReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ActivateReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type ActivateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code     Code   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Token    string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	UserInfo *User  `protobuf:"bytes,5,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
}

func (x *ActivateResp) Reset() {
	*x = ActivateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateResp) ProtoMessage() {}

func (x *ActivateResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateResp.ProtoReflect.Descriptor instead.
func (*ActivateResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{12}
}

func (x *ActivateResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ActivateResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *ActivateResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ActivateResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ActivateResp) GetUserInfo() *User {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

//  忘记密码
// "/box/forget_pass/1.0.0"
type ForgetPassReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce     uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	PeerId    string `protobuf:"bytes,2,opt,name=peerId,proto3" json:"peerId,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ForgetPassReq) Reset() {
	*x = ForgetPassReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPassReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPassReq) ProtoMessage() {}

func (x *ForgetPassReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPassReq.ProtoReflect.Descriptor instead.
func (*ForgetPassReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{13}
}

func (x *ForgetPassReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ForgetPassReq) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *ForgetPassReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ForgetPassReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ForgetPassResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code     Code   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Token    string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	UserInfo *User  `protobuf:"bytes,5,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
}

func (x *ForgetPassResp) Reset() {
	*x = ForgetPassResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPassResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPassResp) ProtoMessage() {}

func (x *ForgetPassResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPassResp.ProtoReflect.Descriptor instead.
func (*ForgetPassResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{14}
}

func (x *ForgetPassResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ForgetPassResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *ForgetPassResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ForgetPassResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ForgetPassResp) GetUserInfo() *User {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

////////////////////////////////////////////////////////////////////////
// 登录
// "/box/login/1.0.0"
type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	PeerId     string `protobuf:"bytes,2,opt,name=peerId,proto3" json:"peerId,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Password   string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	DeviceName string `protobuf:"bytes,5,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{15}
}

func (x *LoginReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *LoginReq) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *LoginReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code     Code   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Token    string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	UserInfo *User  `protobuf:"bytes,5,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{16}
}

func (x *LoginResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *LoginResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *LoginResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginResp) GetUserInfo() *User {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

////////////////////////////////////////////////////////////////////////
// 添加用户
// "/box/user/add/1.0.0"
type AddUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Space    uint64 `protobuf:"varint,5,opt,name=space,proto3" json:"space,omitempty"`
}

func (x *AddUserReq) Reset() {
	*x = AddUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserReq) ProtoMessage() {}

func (x *AddUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserReq.ProtoReflect.Descriptor instead.
func (*AddUserReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{17}
}

func (x *AddUserReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AddUserReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AddUserReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddUserReq) GetSpace() uint64 {
	if x != nil {
		return x.Space
	}
	return 0
}

////////////////////////////////////////////////////////////////////////
// 获取用户信息
// "/box/user/info/1.0.0"
type UserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserInfoReq) Reset() {
	*x = UserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoReq) ProtoMessage() {}

func (x *UserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoReq.ProtoReflect.Descriptor instead.
func (*UserInfoReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{18}
}

func (x *UserInfoReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *UserInfoReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32     `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code       `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string     `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	User  *User      `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Space *DiskSpace `protobuf:"bytes,5,opt,name=space,proto3" json:"space,omitempty"`
}

func (x *UserInfoResp) Reset() {
	*x = UserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoResp) ProtoMessage() {}

func (x *UserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoResp.ProtoReflect.Descriptor instead.
func (*UserInfoResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{19}
}

func (x *UserInfoResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *UserInfoResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *UserInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserInfoResp) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserInfoResp) GetSpace() *DiskSpace {
	if x != nil {
		return x.Space
	}
	return nil
}

////////////////////////////////////////////////////////////////////////
// 获取用户列表
// "/box/user/list/1.0.0"
type UserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserListReq) Reset() {
	*x = UserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListReq) ProtoMessage() {}

func (x *UserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListReq.ProtoReflect.Descriptor instead.
func (*UserListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{20}
}

func (x *UserListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *UserListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32  `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code    `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string  `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	User  []*User `protobuf:"bytes,4,rep,name=user,proto3" json:"user,omitempty"`
}

func (x *UserListResp) Reset() {
	*x = UserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListResp) ProtoMessage() {}

func (x *UserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListResp.ProtoReflect.Descriptor instead.
func (*UserListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{21}
}

func (x *UserListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *UserListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *UserListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserListResp) GetUser() []*User {
	if x != nil {
		return x.User
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 修改自己的密码
// "/box/user/update_pass/1.0.0"
type UpdatePasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce   uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token   string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	OldPass string `protobuf:"bytes,3,opt,name=oldPass,proto3" json:"oldPass,omitempty"`
	NewPass string `protobuf:"bytes,4,opt,name=newPass,proto3" json:"newPass,omitempty"`
}

func (x *UpdatePasswordReq) Reset() {
	*x = UpdatePasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordReq) ProtoMessage() {}

func (x *UpdatePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordReq.ProtoReflect.Descriptor instead.
func (*UpdatePasswordReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{22}
}

func (x *UpdatePasswordReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *UpdatePasswordReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UpdatePasswordReq) GetOldPass() string {
	if x != nil {
		return x.OldPass
	}
	return ""
}

func (x *UpdatePasswordReq) GetNewPass() string {
	if x != nil {
		return x.NewPass
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
// 修改自己的昵称
// "/box/user/rename/1.0.0"
type UserRenameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UserRenameReq) Reset() {
	*x = UserRenameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRenameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRenameReq) ProtoMessage() {}

func (x *UserRenameReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRenameReq.ProtoReflect.Descriptor instead.
func (*UserRenameReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{23}
}

func (x *UserRenameReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *UserRenameReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserRenameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

////////////////////////////////////////////////////////////////////////
// 获取用户头像
// "/box/user/avatar/get/1.0.0"
type GetUserAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	UserId int32  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserAvatarReq) Reset() {
	*x = GetUserAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAvatarReq) ProtoMessage() {}

func (x *GetUserAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAvatarReq.ProtoReflect.Descriptor instead.
func (*GetUserAvatarReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{24}
}

func (x *GetUserAvatarReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *GetUserAvatarReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetUserAvatarReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserAvatarResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code       Code   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg        string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	AvatarData []byte `protobuf:"bytes,4,opt,name=avatarData,proto3" json:"avatarData,omitempty"`
}

func (x *GetUserAvatarResp) Reset() {
	*x = GetUserAvatarResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAvatarResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAvatarResp) ProtoMessage() {}

func (x *GetUserAvatarResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAvatarResp.ProtoReflect.Descriptor instead.
func (*GetUserAvatarResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{25}
}

func (x *GetUserAvatarResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *GetUserAvatarResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *GetUserAvatarResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetUserAvatarResp) GetAvatarData() []byte {
	if x != nil {
		return x.AvatarData
	}
	return nil
}

////////////////////////////////////////////////////////////////////////
// 更新用户头像
// "/box/user/avatar/update/1.0.0"
type UpdateUserAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	AvatarData []byte `protobuf:"bytes,3,opt,name=avatarData,proto3" json:"avatarData,omitempty"`
}

func (x *UpdateUserAvatarReq) Reset() {
	*x = UpdateUserAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserAvatarReq) ProtoMessage() {}

func (x *UpdateUserAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserAvatarReq.ProtoReflect.Descriptor instead.
func (*UpdateUserAvatarReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateUserAvatarReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *UpdateUserAvatarReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UpdateUserAvatarReq) GetAvatarData() []byte {
	if x != nil {
		return x.AvatarData
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 管理员重置他人的密码
// "/box/user/reset_pass/1.0.0"
type ResetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce   uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token   string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	UserId  uint32 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	NewPass string `protobuf:"bytes,4,opt,name=newPass,proto3" json:"newPass,omitempty"`
}

func (x *ResetPasswordReq) Reset() {
	*x = ResetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordReq) ProtoMessage() {}

func (x *ResetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordReq.ProtoReflect.Descriptor instead.
func (*ResetPasswordReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{27}
}

func (x *ResetPasswordReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ResetPasswordReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ResetPasswordReq) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ResetPasswordReq) GetNewPass() string {
	if x != nil {
		return x.NewPass
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
// 管理员禁用/启用子账号
// "/box/user/enable/1.0.0"
type EnableUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	UserId uint32 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Enable bool   `protobuf:"varint,4,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *EnableUserReq) Reset() {
	*x = EnableUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableUserReq) ProtoMessage() {}

func (x *EnableUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableUserReq.ProtoReflect.Descriptor instead.
func (*EnableUserReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{28}
}

func (x *EnableUserReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *EnableUserReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *EnableUserReq) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EnableUserReq) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

///////////////////////////////////////////////////////////////////////
// 管理员删除子账号
// "/box/user/delete/1.0.0"
type DeleteUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	UserId uint32 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *DeleteUserReq) Reset() {
	*x = DeleteUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReq) ProtoMessage() {}

func (x *DeleteUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReq.ProtoReflect.Descriptor instead.
func (*DeleteUserReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteUserReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *DeleteUserReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DeleteUserReq) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////
// 管理员调整子账号空间
// "/box/user/change_space/1.0.0"
type ChangeSpaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	UserId uint32 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Space  uint64 `protobuf:"varint,4,opt,name=space,proto3" json:"space,omitempty"`
}

func (x *ChangeSpaceReq) Reset() {
	*x = ChangeSpaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeSpaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSpaceReq) ProtoMessage() {}

func (x *ChangeSpaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSpaceReq.ProtoReflect.Descriptor instead.
func (*ChangeSpaceReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{30}
}

func (x *ChangeSpaceReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ChangeSpaceReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ChangeSpaceReq) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ChangeSpaceReq) GetSpace() uint64 {
	if x != nil {
		return x.Space
	}
	return 0
}

///////////////////////////////////////////////////////////////////////
// 扫码登录-APP端扫描二维码 （APP => 服务器）
// "/box/qrcode/scan/1.0.0"
// Http Post Json : http://122.9.61.5:16516/v1/scan_qrcode
type ScanQrcodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Qrcode string `protobuf:"bytes,2,opt,name=qrcode,proto3" json:"qrcode,omitempty"`
	PeerId string `protobuf:"bytes,3,opt,name=peerId,proto3" json:"peerId,omitempty"`
	Token  string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ScanQrcodeReq) Reset() {
	*x = ScanQrcodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanQrcodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanQrcodeReq) ProtoMessage() {}

func (x *ScanQrcodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanQrcodeReq.ProtoReflect.Descriptor instead.
func (*ScanQrcodeReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{31}
}

func (x *ScanQrcodeReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ScanQrcodeReq) GetQrcode() string {
	if x != nil {
		return x.Qrcode
	}
	return ""
}

func (x *ScanQrcodeReq) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *ScanQrcodeReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

////////////////////////////////////////////////////////////////////////
// 扫码登录-PC端获取盒子地址  (PC => 服务器)
// "/box/qrcode/get_token/1.0.0"
// Http Post Json : http://122.9.61.5:16516/v1/qrcode_token
type GetTokenByQrcodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Qrcode string `protobuf:"bytes,2,opt,name=qrcode,proto3" json:"qrcode,omitempty"`
}

func (x *GetTokenByQrcodeReq) Reset() {
	*x = GetTokenByQrcodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenByQrcodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenByQrcodeReq) ProtoMessage() {}

func (x *GetTokenByQrcodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenByQrcodeReq.ProtoReflect.Descriptor instead.
func (*GetTokenByQrcodeReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{32}
}

func (x *GetTokenByQrcodeReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *GetTokenByQrcodeReq) GetQrcode() string {
	if x != nil {
		return x.Qrcode
	}
	return ""
}

type GetTokenByQrcodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code   Code   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg    string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Token  string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	PeerId string `protobuf:"bytes,5,opt,name=peerId,proto3" json:"peerId,omitempty"`
}

func (x *GetTokenByQrcodeResp) Reset() {
	*x = GetTokenByQrcodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenByQrcodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenByQrcodeResp) ProtoMessage() {}

func (x *GetTokenByQrcodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenByQrcodeResp.ProtoReflect.Descriptor instead.
func (*GetTokenByQrcodeResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{33}
}

func (x *GetTokenByQrcodeResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *GetTokenByQrcodeResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *GetTokenByQrcodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetTokenByQrcodeResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetTokenByQrcodeResp) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type FileItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size       int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	IsFolder   bool   `protobuf:"varint,4,opt,name=isFolder,proto3" json:"isFolder,omitempty"`
	CreatedAt  int64  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Md5        string `protobuf:"bytes,7,opt,name=md5,proto3" json:"md5,omitempty"`
	Star       bool   `protobuf:"varint,8,opt,name=star,proto3" json:"star,omitempty"`
	Share      bool   `protobuf:"varint,9,opt,name=share,proto3" json:"share,omitempty"`
	SubFiles   int32  `protobuf:"varint,10,opt,name=subFiles,proto3" json:"subFiles,omitempty"`     // 子文件个数
	Kind       string `protobuf:"bytes,11,opt,name=kind,proto3" json:"kind,omitempty"`              // 文件种类
	ShareCount int32  `protobuf:"varint,12,opt,name=shareCount,proto3" json:"shareCount,omitempty"` // 内部分享用户数
	Ext        string `protobuf:"bytes,13,opt,name=ext,proto3" json:"ext,omitempty"`                //文件后缀
	ParentId   string `protobuf:"bytes,14,opt,name=parentId,proto3" json:"parentId,omitempty"`
	ParentName string `protobuf:"bytes,15,opt,name=parentName,proto3" json:"parentName,omitempty"`
	IsSystem   int32  `protobuf:"varint,16,opt,name=isSystem,proto3" json:"isSystem,omitempty"`
	Cid        string `protobuf:"bytes,17,opt,name=cid,proto3" json:"cid,omitempty"`
	FormDevice string `protobuf:"bytes,18,opt,name=formDevice,proto3" json:"formDevice,omitempty"`
	StartAt    int64  `protobuf:"varint,19,opt,name=startAt,proto3" json:"startAt,omitempty"`
	EndAt      int64  `protobuf:"varint,20,opt,name=endAt,proto3" json:"endAt,omitempty"`
}

func (x *FileItem) Reset() {
	*x = FileItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileItem) ProtoMessage() {}

func (x *FileItem) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileItem.ProtoReflect.Descriptor instead.
func (*FileItem) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{34}
}

func (x *FileItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileItem) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileItem) GetIsFolder() bool {
	if x != nil {
		return x.IsFolder
	}
	return false
}

func (x *FileItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FileItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *FileItem) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *FileItem) GetStar() bool {
	if x != nil {
		return x.Star
	}
	return false
}

func (x *FileItem) GetShare() bool {
	if x != nil {
		return x.Share
	}
	return false
}

func (x *FileItem) GetSubFiles() int32 {
	if x != nil {
		return x.SubFiles
	}
	return 0
}

func (x *FileItem) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *FileItem) GetShareCount() int32 {
	if x != nil {
		return x.ShareCount
	}
	return 0
}

func (x *FileItem) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *FileItem) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *FileItem) GetParentName() string {
	if x != nil {
		return x.ParentName
	}
	return ""
}

func (x *FileItem) GetIsSystem() int32 {
	if x != nil {
		return x.IsSystem
	}
	return 0
}

func (x *FileItem) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *FileItem) GetFormDevice() string {
	if x != nil {
		return x.FormDevice
	}
	return ""
}

func (x *FileItem) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *FileItem) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

///////////////////////////////////////////////////////////////////////
// 新建文件夹
// "/box/file/new_folder/1.0.0"
type NewFolderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Id         string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ParentId   string `protobuf:"bytes,5,opt,name=parentId,proto3" json:"parentId,omitempty"`
	IsSystem   int32  `protobuf:"varint,6,opt,name=isSystem,proto3" json:"isSystem,omitempty"`    //1系统文件
	FormDevice string `protobuf:"bytes,7,opt,name=formDevice,proto3" json:"formDevice,omitempty"` //来源：DESKTOP-SD3UMFH(上传到同步文件夹才需要)
}

func (x *NewFolderReq) Reset() {
	*x = NewFolderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewFolderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFolderReq) ProtoMessage() {}

func (x *NewFolderReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFolderReq.ProtoReflect.Descriptor instead.
func (*NewFolderReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{35}
}

func (x *NewFolderReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *NewFolderReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *NewFolderReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NewFolderReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewFolderReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *NewFolderReq) GetIsSystem() int32 {
	if x != nil {
		return x.IsSystem
	}
	return 0
}

func (x *NewFolderReq) GetFormDevice() string {
	if x != nil {
		return x.FormDevice
	}
	return ""
}

type NewFolderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Id    string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NewFolderResp) Reset() {
	*x = NewFolderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewFolderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFolderResp) ProtoMessage() {}

func (x *NewFolderResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFolderResp.ProtoReflect.Descriptor instead.
func (*NewFolderResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{36}
}

func (x *NewFolderResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *NewFolderResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *NewFolderResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
// 文件上传
// "/box/file/upload/1.0.0"
type UploadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce     uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Id        string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	ParentId  string `protobuf:"bytes,5,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Size      int64  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	BytesFrom int64  `protobuf:"varint,7,opt,name=bytes_from,json=bytesFrom,proto3" json:"bytes_from,omitempty"`
	Data      []byte `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	Md5       string `protobuf:"bytes,9,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *UploadFileReq) Reset() {
	*x = UploadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReq) ProtoMessage() {}

func (x *UploadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReq.ProtoReflect.Descriptor instead.
func (*UploadFileReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{37}
}

func (x *UploadFileReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *UploadFileReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UploadFileReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadFileReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UploadFileReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *UploadFileReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadFileReq) GetBytesFrom() int64 {
	if x != nil {
		return x.BytesFrom
	}
	return 0
}

func (x *UploadFileReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadFileReq) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
// 文件下载
// "/box/file/download/1.0.0"
type DownloadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FileId     string `protobuf:"bytes,3,opt,name=fileId,proto3" json:"fileId,omitempty"`
	BytesFrom  int64  `protobuf:"varint,4,opt,name=bytes_from,json=bytesFrom,proto3" json:"bytes_from,omitempty"`
	BytesCount int64  `protobuf:"varint,5,opt,name=bytes_count,json=bytesCount,proto3" json:"bytes_count,omitempty"`
	UserId     int32  `protobuf:"varint,6,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *DownloadFileReq) Reset() {
	*x = DownloadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileReq) ProtoMessage() {}

func (x *DownloadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileReq.ProtoReflect.Descriptor instead.
func (*DownloadFileReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{38}
}

func (x *DownloadFileReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *DownloadFileReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DownloadFileReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *DownloadFileReq) GetBytesFrom() int64 {
	if x != nil {
		return x.BytesFrom
	}
	return 0
}

func (x *DownloadFileReq) GetBytesCount() int64 {
	if x != nil {
		return x.BytesCount
	}
	return 0
}

func (x *DownloadFileReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DownloadFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code     Code   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	FileSize int64  `protobuf:"varint,5,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	Data     []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DownloadFileResp) Reset() {
	*x = DownloadFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileResp) ProtoMessage() {}

func (x *DownloadFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileResp.ProtoReflect.Descriptor instead.
func (*DownloadFileResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{39}
}

func (x *DownloadFileResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *DownloadFileResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *DownloadFileResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DownloadFileResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DownloadFileResp) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *DownloadFileResp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 文件（夹）列表
// "/box/file/list/1.0.0"
type FileListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ParentId string `protobuf:"bytes,3,opt,name=parentId,proto3" json:"parentId,omitempty"`  // "all":所有  空:根目录  非空: 非根目录
	DirMask  int32  `protobuf:"varint,4,opt,name=dirMask,proto3" json:"dirMask,omitempty"`   // -1:所有  0：文件  1：文件夹
	FileType int32  `protobuf:"varint,5,opt,name=fileType,proto3" json:"fileType,omitempty"` // 0:所有 1:音频 2：视频 3：文档  4；相册 5：压缩包
	StarMask int32  `protobuf:"varint,6,opt,name=starMask,proto3" json:"starMask,omitempty"` // -1: 所有  0：未收藏  1：已收藏
	Keyword  string `protobuf:"bytes,7,opt,name=keyword,proto3" json:"keyword,omitempty"`    // 搜索关键字
	Order    int32  `protobuf:"varint,8,opt,name=order,proto3" json:"order,omitempty"`       // 排序规则 0:名称  1:时间  2：大小  3：后缀
	Offset   int32  `protobuf:"varint,9,opt,name=offset,proto3" json:"offset,omitempty"`     // sql的offset
	Limit    int32  `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`      // sql的limit
	IsEqual  int32  `protobuf:"varint,11,opt,name=isEqual,proto3" json:"isEqual,omitempty"`  //用于匹配keyword 0、like 1、=
}

func (x *FileListReq) Reset() {
	*x = FileListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListReq) ProtoMessage() {}

func (x *FileListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListReq.ProtoReflect.Descriptor instead.
func (*FileListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{40}
}

func (x *FileListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileListReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *FileListReq) GetDirMask() int32 {
	if x != nil {
		return x.DirMask
	}
	return 0
}

func (x *FileListReq) GetFileType() int32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *FileListReq) GetStarMask() int32 {
	if x != nil {
		return x.StarMask
	}
	return 0
}

func (x *FileListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *FileListReq) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *FileListReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FileListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FileListReq) GetIsEqual() int32 {
	if x != nil {
		return x.IsEqual
	}
	return 0
}

type FileListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32      `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code        `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string      `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total int32       `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Files []*FileItem `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *FileListResp) Reset() {
	*x = FileListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListResp) ProtoMessage() {}

func (x *FileListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListResp.ProtoReflect.Descriptor instead.
func (*FileListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{41}
}

func (x *FileListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *FileListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FileListResp) GetFiles() []*FileItem {
	if x != nil {
		return x.Files
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 修改文件(夹)名
// "/box/file/rename/1.0.0"
type FileRenameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FileId   string `protobuf:"bytes,3,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ParentId string `protobuf:"bytes,5,opt,name=parentId,proto3" json:"parentId,omitempty"`
}

func (x *FileRenameReq) Reset() {
	*x = FileRenameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRenameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRenameReq) ProtoMessage() {}

func (x *FileRenameReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRenameReq.ProtoReflect.Descriptor instead.
func (*FileRenameReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{42}
}

func (x *FileRenameReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileRenameReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileRenameReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileRenameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileRenameReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
// 删除文件（夹）
// "/box/file/delete/1.0.0"
type FileDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce   uint32   `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token   string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FileIds []string `protobuf:"bytes,3,rep,name=fileIds,proto3" json:"fileIds,omitempty"`
}

func (x *FileDeleteReq) Reset() {
	*x = FileDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDeleteReq) ProtoMessage() {}

func (x *FileDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDeleteReq.ProtoReflect.Descriptor instead.
func (*FileDeleteReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{43}
}

func (x *FileDeleteReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileDeleteReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileDeleteReq) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 移动文件（夹）
// "/box/file/move/1.0.0"
type FileMoveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce       uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token       string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FileId      string `protobuf:"bytes,3,opt,name=fileId,proto3" json:"fileId,omitempty"`
	NewParentId string `protobuf:"bytes,4,opt,name=newParentId,proto3" json:"newParentId,omitempty"`
}

func (x *FileMoveReq) Reset() {
	*x = FileMoveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMoveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMoveReq) ProtoMessage() {}

func (x *FileMoveReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMoveReq.ProtoReflect.Descriptor instead.
func (*FileMoveReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{44}
}

func (x *FileMoveReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileMoveReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileMoveReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileMoveReq) GetNewParentId() string {
	if x != nil {
		return x.NewParentId
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
//  复制文件（夹）
// "/box/file/copy/1.0.0"
type FileCopyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce       uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token       string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FileId      string `protobuf:"bytes,3,opt,name=fileId,proto3" json:"fileId,omitempty"`
	NewParentId string `protobuf:"bytes,4,opt,name=newParentId,proto3" json:"newParentId,omitempty"`
	NewFileId   string `protobuf:"bytes,5,opt,name=newFileId,proto3" json:"newFileId,omitempty"`
	NewFileName string `protobuf:"bytes,6,opt,name=newFileName,proto3" json:"newFileName,omitempty"`
	UserId      int32  `protobuf:"varint,7,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *FileCopyReq) Reset() {
	*x = FileCopyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileCopyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCopyReq) ProtoMessage() {}

func (x *FileCopyReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCopyReq.ProtoReflect.Descriptor instead.
func (*FileCopyReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{45}
}

func (x *FileCopyReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileCopyReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileCopyReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileCopyReq) GetNewParentId() string {
	if x != nil {
		return x.NewParentId
	}
	return ""
}

func (x *FileCopyReq) GetNewFileId() string {
	if x != nil {
		return x.NewFileId
	}
	return ""
}

func (x *FileCopyReq) GetNewFileName() string {
	if x != nil {
		return x.NewFileName
	}
	return ""
}

func (x *FileCopyReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////
// 收藏文件（夹）
// "/box/file/star/1.0.0"
type FileStarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce   uint32   `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token   string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FileIds []string `protobuf:"bytes,3,rep,name=fileIds,proto3" json:"fileIds,omitempty"`
}

func (x *FileStarReq) Reset() {
	*x = FileStarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileStarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStarReq) ProtoMessage() {}

func (x *FileStarReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStarReq.ProtoReflect.Descriptor instead.
func (*FileStarReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{46}
}

func (x *FileStarReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileStarReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileStarReq) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 取消收藏文件（夹）
// "/box/file/unstar/1.0.0"
type FileUnstarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce   uint32   `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token   string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FileIds []string `protobuf:"bytes,3,rep,name=fileIds,proto3" json:"fileIds,omitempty"`
}

func (x *FileUnstarReq) Reset() {
	*x = FileUnstarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUnstarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUnstarReq) ProtoMessage() {}

func (x *FileUnstarReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUnstarReq.ProtoReflect.Descriptor instead.
func (*FileUnstarReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{47}
}

func (x *FileUnstarReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileUnstarReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileUnstarReq) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 回收站Item
type RecycleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FileId    string `protobuf:"bytes,2,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Size      int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	IsFolder  bool   `protobuf:"varint,5,opt,name=isFolder,proto3" json:"isFolder,omitempty"`
	CreatedAt int64  `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Ext       string `protobuf:"bytes,7,opt,name=ext,proto3" json:"ext,omitempty"`
}

func (x *RecycleItem) Reset() {
	*x = RecycleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleItem) ProtoMessage() {}

func (x *RecycleItem) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleItem.ProtoReflect.Descriptor instead.
func (*RecycleItem) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{48}
}

func (x *RecycleItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecycleItem) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *RecycleItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecycleItem) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RecycleItem) GetIsFolder() bool {
	if x != nil {
		return x.IsFolder
	}
	return false
}

func (x *RecycleItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RecycleItem) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
// 回收站列表
// "/box/recycle/list/1.0.0"
type RecycleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Order    int32  `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Offset   int32  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit    int32  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Keyword  string `protobuf:"bytes,7,opt,name=keyword,proto3" json:"keyword,omitempty"`    // 搜索关键字
	FileType int32  `protobuf:"varint,8,opt,name=fileType,proto3" json:"fileType,omitempty"` // 0:所有 1:音频 2：视频 3：文档  4；相册 5：压缩包
}

func (x *RecycleListReq) Reset() {
	*x = RecycleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleListReq) ProtoMessage() {}

func (x *RecycleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleListReq.ProtoReflect.Descriptor instead.
func (*RecycleListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{49}
}

func (x *RecycleListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *RecycleListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RecycleListReq) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *RecycleListReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RecycleListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RecycleListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *RecycleListReq) GetFileType() int32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

type RecycleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32         `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code           `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string         `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total int32          `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Items []*RecycleItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RecycleListResp) Reset() {
	*x = RecycleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleListResp) ProtoMessage() {}

func (x *RecycleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleListResp.ProtoReflect.Descriptor instead.
func (*RecycleListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{50}
}

func (x *RecycleListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *RecycleListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *RecycleListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RecycleListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RecycleListResp) GetItems() []*RecycleItem {
	if x != nil {
		return x.Items
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 回收站删除文件（夹）
// "/box/recycle/delete/1.0.0"
type RecycleDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32  `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token string  `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Ids   []int32 `protobuf:"varint,3,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *RecycleDeleteReq) Reset() {
	*x = RecycleDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleDeleteReq) ProtoMessage() {}

func (x *RecycleDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleDeleteReq.ProtoReflect.Descriptor instead.
func (*RecycleDeleteReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{51}
}

func (x *RecycleDeleteReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *RecycleDeleteReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RecycleDeleteReq) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 回收站恢复删除文件（夹）
// "/box/recycle/restore/1.0.0"
type RecycleRestoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32  `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token string  `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Ids   []int32 `protobuf:"varint,3,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *RecycleRestoreReq) Reset() {
	*x = RecycleRestoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleRestoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleRestoreReq) ProtoMessage() {}

func (x *RecycleRestoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleRestoreReq.ProtoReflect.Descriptor instead.
func (*RecycleRestoreReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{52}
}

func (x *RecycleRestoreReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *RecycleRestoreReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RecycleRestoreReq) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 共享文件（夹）
// "/box/file/share/1.0.0"
type FileShareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32   `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token      string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FileIds    []string `protobuf:"bytes,3,rep,name=fileIds,proto3" json:"fileIds,omitempty"`
	UserIdList string   `protobuf:"bytes,4,opt,name=userIdList,proto3" json:"userIdList,omitempty"`
	StartAt    int64    `protobuf:"varint,5,opt,name=startAt,proto3" json:"startAt,omitempty"`
	EndAt      int64    `protobuf:"varint,6,opt,name=endAt,proto3" json:"endAt,omitempty"`
}

func (x *FileShareReq) Reset() {
	*x = FileShareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileShareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileShareReq) ProtoMessage() {}

func (x *FileShareReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileShareReq.ProtoReflect.Descriptor instead.
func (*FileShareReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{53}
}

func (x *FileShareReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileShareReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileShareReq) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *FileShareReq) GetUserIdList() string {
	if x != nil {
		return x.UserIdList
	}
	return ""
}

func (x *FileShareReq) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *FileShareReq) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

///////////////////////////////////////////////////////////////////////
// 取消共享文件（夹）
// "/box/file/unshare/1.0.0"
type FileUnShareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce   uint32   `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token   string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FileIds []string `protobuf:"bytes,3,rep,name=fileIds,proto3" json:"fileIds,omitempty"`
}

func (x *FileUnShareReq) Reset() {
	*x = FileUnShareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUnShareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUnShareReq) ProtoMessage() {}

func (x *FileUnShareReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUnShareReq.ProtoReflect.Descriptor instead.
func (*FileUnShareReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{54}
}

func (x *FileUnShareReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileUnShareReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileUnShareReq) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

// 关闭共享文件（夹）
// "/box/file/close_share/1.0.0"
type FileCloseShareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	UserId uint32 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *FileCloseShareReq) Reset() {
	*x = FileCloseShareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileCloseShareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCloseShareReq) ProtoMessage() {}

func (x *FileCloseShareReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCloseShareReq.ProtoReflect.Descriptor instead.
func (*FileCloseShareReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{55}
}

func (x *FileCloseShareReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileCloseShareReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileCloseShareReq) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////
// 指定人员的共享文件（夹）列表
// "/box/file/sharelist/1.0.0"
type ShareListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	UserId   uint32 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName string `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	ParentId string `protobuf:"bytes,5,opt,name=parentId,proto3" json:"parentId,omitempty"`  // "all":所有  空:根目录 非空: 非根目录
	DirMask  int32  `protobuf:"varint,6,opt,name=dirMask,proto3" json:"dirMask,omitempty"`   // -1:所有  0：文件  1：文件夹
	FileType int32  `protobuf:"varint,7,opt,name=fileType,proto3" json:"fileType,omitempty"` // 0:所有 1:音频 2：视频 3：文档  4；相册 5：压缩包
	StarMask int32  `protobuf:"varint,8,opt,name=starMask,proto3" json:"starMask,omitempty"` // 1:
	Keyword  string `protobuf:"bytes,9,opt,name=keyword,proto3" json:"keyword,omitempty"`    // 搜索关键字
	Order    int32  `protobuf:"varint,10,opt,name=order,proto3" json:"order,omitempty"`      // 排序规则 0:名称  1:时间  2：大小  3：后缀
	Offset   int32  `protobuf:"varint,11,opt,name=offset,proto3" json:"offset,omitempty"`    // sql的offset
	Limit    int32  `protobuf:"varint,12,opt,name=limit,proto3" json:"limit,omitempty"`      // sql的limit
	Ext      string `protobuf:"bytes,13,opt,name=ext,proto3" json:"ext,omitempty"`           //后缀
}

func (x *ShareListReq) Reset() {
	*x = ShareListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareListReq) ProtoMessage() {}

func (x *ShareListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareListReq.ProtoReflect.Descriptor instead.
func (*ShareListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{56}
}

func (x *ShareListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ShareListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ShareListReq) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ShareListReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ShareListReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ShareListReq) GetDirMask() int32 {
	if x != nil {
		return x.DirMask
	}
	return 0
}

func (x *ShareListReq) GetFileType() int32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *ShareListReq) GetStarMask() int32 {
	if x != nil {
		return x.StarMask
	}
	return 0
}

func (x *ShareListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ShareListReq) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ShareListReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ShareListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ShareListReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
// 共享Item
type ShareItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FileId      string `protobuf:"bytes,2,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Size        int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	IsFolder    bool   `protobuf:"varint,5,opt,name=isFolder,proto3" json:"isFolder,omitempty"`
	FileType    string `protobuf:"bytes,6,opt,name=fileType,proto3" json:"fileType,omitempty"`
	CreatedAt   int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UserName    string `protobuf:"bytes,8,opt,name=userName,proto3" json:"userName,omitempty"`
	EndAt       int64  `protobuf:"varint,9,opt,name=endAt,proto3" json:"endAt,omitempty"`
	CountPeople int64  `protobuf:"varint,10,opt,name=countPeople,proto3" json:"countPeople,omitempty"`
	Ext         string `protobuf:"bytes,11,opt,name=ext,proto3" json:"ext,omitempty"` //后缀
	Share       bool   `protobuf:"varint,12,opt,name=share,proto3" json:"share,omitempty"`
	Md5         string `protobuf:"bytes,13,opt,name=md5,proto3" json:"md5,omitempty"`
	ParentId    string `protobuf:"bytes,14,opt,name=parentId,proto3" json:"parentId,omitempty"`
	SubFiles    int32  `protobuf:"varint,16,opt,name=subFiles,proto3" json:"subFiles,omitempty"` // 子文件个数
	Cid         string `protobuf:"bytes,17,opt,name=cid,proto3" json:"cid,omitempty"`
	StartAt     int64  `protobuf:"varint,18,opt,name=startAt,proto3" json:"startAt,omitempty"`
}

func (x *ShareItem) Reset() {
	*x = ShareItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareItem) ProtoMessage() {}

func (x *ShareItem) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareItem.ProtoReflect.Descriptor instead.
func (*ShareItem) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{57}
}

func (x *ShareItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShareItem) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShareItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShareItem) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ShareItem) GetIsFolder() bool {
	if x != nil {
		return x.IsFolder
	}
	return false
}

func (x *ShareItem) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *ShareItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ShareItem) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ShareItem) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *ShareItem) GetCountPeople() int64 {
	if x != nil {
		return x.CountPeople
	}
	return 0
}

func (x *ShareItem) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *ShareItem) GetShare() bool {
	if x != nil {
		return x.Share
	}
	return false
}

func (x *ShareItem) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *ShareItem) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ShareItem) GetSubFiles() int32 {
	if x != nil {
		return x.SubFiles
	}
	return 0
}

func (x *ShareItem) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ShareItem) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

type ShareListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32       `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code         `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string       `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total int32        `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Items []*ShareItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ShareListResp) Reset() {
	*x = ShareListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareListResp) ProtoMessage() {}

func (x *ShareListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareListResp.ProtoReflect.Descriptor instead.
func (*ShareListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{58}
}

func (x *ShareListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ShareListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *ShareListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShareListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ShareListResp) GetItems() []*ShareItem {
	if x != nil {
		return x.Items
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 统计用户共享文件（夹）
// "/box/file/usersharelist/1.0.0"
type UserShareListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce   uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token   string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Keyword string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *UserShareListReq) Reset() {
	*x = UserShareListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserShareListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserShareListReq) ProtoMessage() {}

func (x *UserShareListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserShareListReq.ProtoReflect.Descriptor instead.
func (*UserShareListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{59}
}

func (x *UserShareListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *UserShareListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserShareListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
// 用户共享Item
type UserShareItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FileId      string `protobuf:"bytes,2,opt,name=fileId,proto3" json:"fileId,omitempty"`
	UserId      int32  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName    string `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	FolderCount int64  `protobuf:"varint,5,opt,name=folderCount,proto3" json:"folderCount,omitempty"`
	FileCount   int64  `protobuf:"varint,6,opt,name=fileCount,proto3" json:"fileCount,omitempty"`
}

func (x *UserShareItem) Reset() {
	*x = UserShareItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserShareItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserShareItem) ProtoMessage() {}

func (x *UserShareItem) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserShareItem.ProtoReflect.Descriptor instead.
func (*UserShareItem) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{60}
}

func (x *UserShareItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserShareItem) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UserShareItem) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserShareItem) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserShareItem) GetFolderCount() int64 {
	if x != nil {
		return x.FolderCount
	}
	return 0
}

func (x *UserShareItem) GetFileCount() int64 {
	if x != nil {
		return x.FileCount
	}
	return 0
}

type UserShareListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32           `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code             `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string           `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total int32            `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Items []*UserShareItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *UserShareListResp) Reset() {
	*x = UserShareListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserShareListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserShareListResp) ProtoMessage() {}

func (x *UserShareListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserShareListResp.ProtoReflect.Descriptor instead.
func (*UserShareListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{61}
}

func (x *UserShareListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *UserShareListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *UserShareListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserShareListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserShareListResp) GetItems() []*UserShareItem {
	if x != nil {
		return x.Items
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 修改共享文件（夹）
// "/box/file/edit_share/1.0.0"
type FileEditShareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32   `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token      string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FileIds    []string `protobuf:"bytes,3,rep,name=fileIds,proto3" json:"fileIds,omitempty"`
	UserIdList string   `protobuf:"bytes,4,opt,name=userIdList,proto3" json:"userIdList,omitempty"`
	StartAt    int64    `protobuf:"varint,5,opt,name=startAt,proto3" json:"startAt,omitempty"`
	EndAt      int64    `protobuf:"varint,6,opt,name=endAt,proto3" json:"endAt,omitempty"`
}

func (x *FileEditShareReq) Reset() {
	*x = FileEditShareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileEditShareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEditShareReq) ProtoMessage() {}

func (x *FileEditShareReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEditShareReq.ProtoReflect.Descriptor instead.
func (*FileEditShareReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{62}
}

func (x *FileEditShareReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileEditShareReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileEditShareReq) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *FileEditShareReq) GetUserIdList() string {
	if x != nil {
		return x.UserIdList
	}
	return ""
}

func (x *FileEditShareReq) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *FileEditShareReq) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

///////////////////////////////////////////////////////////////////////
// 备份通讯录
// "/box/addressbook/backup/1.0.0"
type AddressbookBackupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	DeviceName string `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName,omitempty"` // 手机名称
	Content    string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`       // 通讯录内容, 前端自定义格式
}

func (x *AddressbookBackupReq) Reset() {
	*x = AddressbookBackupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressbookBackupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressbookBackupReq) ProtoMessage() {}

func (x *AddressbookBackupReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressbookBackupReq.ProtoReflect.Descriptor instead.
func (*AddressbookBackupReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{63}
}

func (x *AddressbookBackupReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AddressbookBackupReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AddressbookBackupReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *AddressbookBackupReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
// 删除通讯录
// "/box/addressbook/delete/1.0.0"
type AddressbookDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Id    int32  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddressbookDeleteReq) Reset() {
	*x = AddressbookDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressbookDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressbookDeleteReq) ProtoMessage() {}

func (x *AddressbookDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressbookDeleteReq.ProtoReflect.Descriptor instead.
func (*AddressbookDeleteReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{64}
}

func (x *AddressbookDeleteReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AddressbookDeleteReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AddressbookDeleteReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

///////////////////////////////////////////////////////////////////////
// 删除所有通讯录
// "/box/addressbook/delete_all/1.0.0"
type AddressbookDeleteAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AddressbookDeleteAllReq) Reset() {
	*x = AddressbookDeleteAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressbookDeleteAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressbookDeleteAllReq) ProtoMessage() {}

func (x *AddressbookDeleteAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressbookDeleteAllReq.ProtoReflect.Descriptor instead.
func (*AddressbookDeleteAllReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{65}
}

func (x *AddressbookDeleteAllReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AddressbookDeleteAllReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
// 获取通讯录列表
// "/box/addressbook/list/1.0.0"
type AddressbookListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Offset int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *AddressbookListReq) Reset() {
	*x = AddressbookListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressbookListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressbookListReq) ProtoMessage() {}

func (x *AddressbookListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressbookListReq.ProtoReflect.Descriptor instead.
func (*AddressbookListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{66}
}

func (x *AddressbookListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AddressbookListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AddressbookListReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AddressbookListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Addressbook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BackupAt   uint64 `protobuf:"varint,2,opt,name=backupAt,proto3" json:"backupAt,omitempty"`
	DeviceName string `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName,omitempty"` // 手机名称
	Content    string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`       // 通讯录内容, 前端自定义格式
}

func (x *Addressbook) Reset() {
	*x = Addressbook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Addressbook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Addressbook) ProtoMessage() {}

func (x *Addressbook) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Addressbook.ProtoReflect.Descriptor instead.
func (*Addressbook) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{67}
}

func (x *Addressbook) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Addressbook) GetBackupAt() uint64 {
	if x != nil {
		return x.BackupAt
	}
	return 0
}

func (x *Addressbook) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *Addressbook) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddressbookListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce        uint32         `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code         Code           `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg          string         `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total        int32          `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Addressbooks []*Addressbook `protobuf:"bytes,5,rep,name=addressbooks,proto3" json:"addressbooks,omitempty"`
}

func (x *AddressbookListResp) Reset() {
	*x = AddressbookListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressbookListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressbookListResp) ProtoMessage() {}

func (x *AddressbookListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressbookListResp.ProtoReflect.Descriptor instead.
func (*AddressbookListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{68}
}

func (x *AddressbookListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AddressbookListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *AddressbookListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddressbookListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AddressbookListResp) GetAddressbooks() []*Addressbook {
	if x != nil {
		return x.Addressbooks
	}
	return nil
}

// 获取指定通讯录
// "/box/appoint_address/list/1.0.0"
type AppointAddressListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Id    int32  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AppointAddressListReq) Reset() {
	*x = AppointAddressListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointAddressListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointAddressListReq) ProtoMessage() {}

func (x *AppointAddressListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointAddressListReq.ProtoReflect.Descriptor instead.
func (*AppointAddressListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{69}
}

func (x *AppointAddressListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AppointAddressListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AppointAddressListReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AppointAddressListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce        uint32         `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code         Code           `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg          string         `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total        int32          `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Addressbooks []*Addressbook `protobuf:"bytes,5,rep,name=addressbooks,proto3" json:"addressbooks,omitempty"`
}

func (x *AppointAddressListResp) Reset() {
	*x = AppointAddressListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointAddressListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointAddressListResp) ProtoMessage() {}

func (x *AppointAddressListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointAddressListResp.ProtoReflect.Descriptor instead.
func (*AppointAddressListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{70}
}

func (x *AppointAddressListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AppointAddressListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *AppointAddressListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AppointAddressListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AppointAddressListResp) GetAddressbooks() []*Addressbook {
	if x != nil {
		return x.Addressbooks
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 获取指定文件夹下的数据
// "/box/file/appointlist/1.0.0"
type AppointFileListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ParentId string `protobuf:"bytes,3,opt,name=parentId,proto3" json:"parentId,omitempty"`
	IsFolder int32  `protobuf:"varint,4,opt,name=isFolder,proto3" json:"isFolder,omitempty"`
}

func (x *AppointFileListReq) Reset() {
	*x = AppointFileListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointFileListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointFileListReq) ProtoMessage() {}

func (x *AppointFileListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointFileListReq.ProtoReflect.Descriptor instead.
func (*AppointFileListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{71}
}

func (x *AppointFileListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AppointFileListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AppointFileListReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *AppointFileListReq) GetIsFolder() int32 {
	if x != nil {
		return x.IsFolder
	}
	return 0
}

type AppointFileListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid      string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Ext       string `protobuf:"bytes,4,opt,name=ext,proto3" json:"ext,omitempty"`
	Size      int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	ParentId  string `protobuf:"bytes,6,opt,name=parentId,proto3" json:"parentId,omitempty"`
	IsFolder  bool   `protobuf:"varint,7,opt,name=isFolder,proto3" json:"isFolder,omitempty"`
	Paths     string `protobuf:"bytes,8,opt,name=paths,proto3" json:"paths,omitempty"`
	Md5       string `protobuf:"bytes,9,opt,name=md5,proto3" json:"md5,omitempty"`
	Children  string `protobuf:"bytes,10,opt,name=children,proto3" json:"children,omitempty"`
	Cid       string `protobuf:"bytes,11,opt,name=cid,proto3" json:"cid,omitempty"`
	FilePaths string `protobuf:"bytes,12,opt,name=filePaths,proto3" json:"filePaths,omitempty"`
}

func (x *AppointFileListItem) Reset() {
	*x = AppointFileListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointFileListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointFileListItem) ProtoMessage() {}

func (x *AppointFileListItem) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointFileListItem.ProtoReflect.Descriptor instead.
func (*AppointFileListItem) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{72}
}

func (x *AppointFileListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppointFileListItem) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AppointFileListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppointFileListItem) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *AppointFileListItem) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AppointFileListItem) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *AppointFileListItem) GetIsFolder() bool {
	if x != nil {
		return x.IsFolder
	}
	return false
}

func (x *AppointFileListItem) GetPaths() string {
	if x != nil {
		return x.Paths
	}
	return ""
}

func (x *AppointFileListItem) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *AppointFileListItem) GetChildren() string {
	if x != nil {
		return x.Children
	}
	return ""
}

func (x *AppointFileListItem) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *AppointFileListItem) GetFilePaths() string {
	if x != nil {
		return x.FilePaths
	}
	return ""
}

type AppointFileListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32                 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code                   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total int32                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Items []*AppointFileListItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AppointFileListResp) Reset() {
	*x = AppointFileListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointFileListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointFileListResp) ProtoMessage() {}

func (x *AppointFileListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointFileListResp.ProtoReflect.Descriptor instead.
func (*AppointFileListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{73}
}

func (x *AppointFileListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AppointFileListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *AppointFileListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AppointFileListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AppointFileListResp) GetItems() []*AppointFileListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 获取指定备份文件夹下的数据
// "/box/file/backup_list/1.0.0"
type FileBackupListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FormDevice string `protobuf:"bytes,3,opt,name=formDevice,proto3" json:"formDevice,omitempty"`
	Offset     int32  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit      int32  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *FileBackupListReq) Reset() {
	*x = FileBackupListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileBackupListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBackupListReq) ProtoMessage() {}

func (x *FileBackupListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileBackupListReq.ProtoReflect.Descriptor instead.
func (*FileBackupListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{74}
}

func (x *FileBackupListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileBackupListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileBackupListReq) GetFormDevice() string {
	if x != nil {
		return x.FormDevice
	}
	return ""
}

func (x *FileBackupListReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FileBackupListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type FileBackupListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32                 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code                   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total int32                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Items []*AppointFileListItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *FileBackupListResp) Reset() {
	*x = FileBackupListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileBackupListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBackupListResp) ProtoMessage() {}

func (x *FileBackupListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileBackupListResp.ProtoReflect.Descriptor instead.
func (*FileBackupListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{75}
}

func (x *FileBackupListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileBackupListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *FileBackupListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileBackupListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FileBackupListResp) GetItems() []*AppointFileListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
// 查询文件md5是否存在
// "/box/file/searchmd5/1.0.0"
type SearchFileMd5Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Md5   string `protobuf:"bytes,3,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *SearchFileMd5Req) Reset() {
	*x = SearchFileMd5Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFileMd5Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFileMd5Req) ProtoMessage() {}

func (x *SearchFileMd5Req) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFileMd5Req.ProtoReflect.Descriptor instead.
func (*SearchFileMd5Req) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{76}
}

func (x *SearchFileMd5Req) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SearchFileMd5Req) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SearchFileMd5Req) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

type SearchFileMd5Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Id    string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Cid   string `protobuf:"bytes,4,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *SearchFileMd5Resp) Reset() {
	*x = SearchFileMd5Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFileMd5Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFileMd5Resp) ProtoMessage() {}

func (x *SearchFileMd5Resp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFileMd5Resp.ProtoReflect.Descriptor instead.
func (*SearchFileMd5Resp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{77}
}

func (x *SearchFileMd5Resp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SearchFileMd5Resp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *SearchFileMd5Resp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchFileMd5Resp) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

//CommonResp
//  添加文件（夹）记录
// "/box/file/file_record/1.0.0"
type FileRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce    uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FileId   string `protobuf:"bytes,3,opt,name=fileId,proto3" json:"fileId,omitempty"`
	ParentId string `protobuf:"bytes,4,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Name     string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Cid      string `protobuf:"bytes,6,opt,name=cid,proto3" json:"cid,omitempty"`
	Md5      string `protobuf:"bytes,7,opt,name=md5,proto3" json:"md5,omitempty"`
	IsFolder int32  `protobuf:"varint,8,opt,name=isFolder,proto3" json:"isFolder,omitempty"`
	Size     int64  `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FileRecordReq) Reset() {
	*x = FileRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRecordReq) ProtoMessage() {}

func (x *FileRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRecordReq.ProtoReflect.Descriptor instead.
func (*FileRecordReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{78}
}

func (x *FileRecordReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileRecordReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileRecordReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileRecordReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *FileRecordReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileRecordReq) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *FileRecordReq) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *FileRecordReq) GetIsFolder() int32 {
	if x != nil {
		return x.IsFolder
	}
	return 0
}

func (x *FileRecordReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

///////////////////////////////////////////////////////////////////////
// 备份记录
// "/box/backups/list/1.0.0"
type BackupsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Offset int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *BackupsListReq) Reset() {
	*x = BackupsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupsListReq) ProtoMessage() {}

func (x *BackupsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupsListReq.ProtoReflect.Descriptor instead.
func (*BackupsListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{79}
}

func (x *BackupsListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *BackupsListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BackupsListReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *BackupsListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type BackupsListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	FileCount  int32  `protobuf:"varint,3,opt,name=fileCount,proto3" json:"fileCount,omitempty"`
	CreatedAt  int64  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *BackupsListItem) Reset() {
	*x = BackupsListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupsListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupsListItem) ProtoMessage() {}

func (x *BackupsListItem) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupsListItem.ProtoReflect.Descriptor instead.
func (*BackupsListItem) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{80}
}

func (x *BackupsListItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BackupsListItem) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *BackupsListItem) GetFileCount() int32 {
	if x != nil {
		return x.FileCount
	}
	return 0
}

func (x *BackupsListItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type BackupsListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32             `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code               `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string             `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total int32              `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Items []*BackupsListItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BackupsListResp) Reset() {
	*x = BackupsListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupsListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupsListResp) ProtoMessage() {}

func (x *BackupsListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupsListResp.ProtoReflect.Descriptor instead.
func (*BackupsListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{81}
}

func (x *BackupsListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *BackupsListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *BackupsListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BackupsListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BackupsListResp) GetItems() []*BackupsListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 添加备份记录
// "/box/backups/add/1.0.0"
type BackupsAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	DeviceName string `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	FileCount  int32  `protobuf:"varint,4,opt,name=fileCount,proto3" json:"fileCount,omitempty"`
}

func (x *BackupsAddReq) Reset() {
	*x = BackupsAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupsAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupsAddReq) ProtoMessage() {}

func (x *BackupsAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupsAddReq.ProtoReflect.Descriptor instead.
func (*BackupsAddReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{82}
}

func (x *BackupsAddReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *BackupsAddReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BackupsAddReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *BackupsAddReq) GetFileCount() int32 {
	if x != nil {
		return x.FileCount
	}
	return 0
}

///////////////////////////////////////////////////////////////////////
// 日志
// "/box/log/list/1.0.0"
type FileLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Status     int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	SearchTime int32  `protobuf:"varint,4,opt,name=searchTime,proto3" json:"searchTime,omitempty"`
}

func (x *FileLogListReq) Reset() {
	*x = FileLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileLogListReq) ProtoMessage() {}

func (x *FileLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileLogListReq.ProtoReflect.Descriptor instead.
func (*FileLogListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{83}
}

func (x *FileLogListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileLogListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileLogListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FileLogListReq) GetSearchTime() int32 {
	if x != nil {
		return x.SearchTime
	}
	return 0
}

type FileLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce     uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code      Code   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg       string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Id        int32  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	FileId    string `protobuf:"bytes,5,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Status    int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	IdList    string `protobuf:"bytes,7,opt,name=idList,proto3" json:"idList,omitempty"`
	CreatedAt int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *FileLogListResp) Reset() {
	*x = FileLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileLogListResp) ProtoMessage() {}

func (x *FileLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileLogListResp.ProtoReflect.Descriptor instead.
func (*FileLogListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{84}
}

func (x *FileLogListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *FileLogListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *FileLogListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileLogListResp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileLogListResp) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileLogListResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FileLogListResp) GetIdList() string {
	if x != nil {
		return x.IdList
	}
	return ""
}

func (x *FileLogListResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

///////////////////////////////////////////////////////////////////////
// 同步设置
// "/box/sync/list/1.0.0"
type SyncListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	DeviceName string `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
}

func (x *SyncListReq) Reset() {
	*x = SyncListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncListReq) ProtoMessage() {}

func (x *SyncListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncListReq.ProtoReflect.Descriptor instead.
func (*SyncListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{85}
}

func (x *SyncListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SyncListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SyncListReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type SyncListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	DevicePath string `protobuf:"bytes,3,opt,name=devicePath,proto3" json:"devicePath,omitempty"`
	FileId     string `protobuf:"bytes,4,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt  int64  `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *SyncListItem) Reset() {
	*x = SyncListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncListItem) ProtoMessage() {}

func (x *SyncListItem) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncListItem.ProtoReflect.Descriptor instead.
func (*SyncListItem) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{86}
}

func (x *SyncListItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SyncListItem) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SyncListItem) GetDevicePath() string {
	if x != nil {
		return x.DevicePath
	}
	return ""
}

func (x *SyncListItem) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *SyncListItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SyncListItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type SyncListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32          `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code            `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string          `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total int32           `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Items []*SyncListItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SyncListResp) Reset() {
	*x = SyncListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncListResp) ProtoMessage() {}

func (x *SyncListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncListResp.ProtoReflect.Descriptor instead.
func (*SyncListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{87}
}

func (x *SyncListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SyncListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *SyncListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SyncListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SyncListResp) GetItems() []*SyncListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 添加同步设置
// "/box/sync/add/1.0.0"
type SyncAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	DeviceName string `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	DevicePath string `protobuf:"bytes,4,opt,name=devicePath,proto3" json:"devicePath,omitempty"`
	FileId     string `protobuf:"bytes,5,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Status     int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SyncAddReq) Reset() {
	*x = SyncAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAddReq) ProtoMessage() {}

func (x *SyncAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAddReq.ProtoReflect.Descriptor instead.
func (*SyncAddReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{88}
}

func (x *SyncAddReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SyncAddReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SyncAddReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SyncAddReq) GetDevicePath() string {
	if x != nil {
		return x.DevicePath
	}
	return ""
}

func (x *SyncAddReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *SyncAddReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 修改同步设置
// "/box/sync/edit/1.0.0"
type SyncEditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce      uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Id         int32  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	DeviceName string `protobuf:"bytes,4,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	DevicePath string `protobuf:"bytes,5,opt,name=devicePath,proto3" json:"devicePath,omitempty"`
	FileId     string `protobuf:"bytes,6,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Status     int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SyncEditReq) Reset() {
	*x = SyncEditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncEditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncEditReq) ProtoMessage() {}

func (x *SyncEditReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncEditReq.ProtoReflect.Descriptor instead.
func (*SyncEditReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{89}
}

func (x *SyncEditReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SyncEditReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SyncEditReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SyncEditReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SyncEditReq) GetDevicePath() string {
	if x != nil {
		return x.DevicePath
	}
	return ""
}

func (x *SyncEditReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *SyncEditReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

//CommonResp
// 删除同步设置
// "/box/sync/del/1.0.0"
type SyncDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Id    int32  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SyncDelReq) Reset() {
	*x = SyncDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncDelReq) ProtoMessage() {}

func (x *SyncDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncDelReq.ProtoReflect.Descriptor instead.
func (*SyncDelReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{90}
}

func (x *SyncDelReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SyncDelReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SyncDelReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// box升级
// "/box/update/1.0.0"
type BoxUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Md5     string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Url     string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *BoxUpdateReq) Reset() {
	*x = BoxUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxUpdateReq) ProtoMessage() {}

func (x *BoxUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxUpdateReq.ProtoReflect.Descriptor instead.
func (*BoxUpdateReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{91}
}

func (x *BoxUpdateReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BoxUpdateReq) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *BoxUpdateReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BoxUpdateReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type BoxUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   Code   `protobuf:"varint,1,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *BoxUpdateResp) Reset() {
	*x = BoxUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxUpdateResp) ProtoMessage() {}

func (x *BoxUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxUpdateResp.ProtoReflect.Descriptor instead.
func (*BoxUpdateResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{92}
}

func (x *BoxUpdateResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *BoxUpdateResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BoxUpdateResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 获取box参数
// "/box/deviceInfo/1.0.0"
type DeviceInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *DeviceInfoReq) Reset() {
	*x = DeviceInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoReq) ProtoMessage() {}

func (x *DeviceInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoReq.ProtoReflect.Descriptor instead.
func (*DeviceInfoReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{93}
}

func (x *DeviceInfoReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type DeviceInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      Code   `protobuf:"varint,1,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Version   string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Sn        string `protobuf:"bytes,3,opt,name=sn,proto3" json:"sn,omitempty"`
	Framework string `protobuf:"bytes,4,opt,name=framework,proto3" json:"framework,omitempty"`
}

func (x *DeviceInfoResp) Reset() {
	*x = DeviceInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoResp) ProtoMessage() {}

func (x *DeviceInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoResp.ProtoReflect.Descriptor instead.
func (*DeviceInfoResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{94}
}

func (x *DeviceInfoResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *DeviceInfoResp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DeviceInfoResp) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *DeviceInfoResp) GetFramework() string {
	if x != nil {
		return x.Framework
	}
	return ""
}

// 获取磁盘空间
// "/box/diskCount/1.0.0"
type DiskCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId string `protobuf:"bytes,1,opt,name=peerId,proto3" json:"peerId,omitempty"`
}

func (x *DiskCountReq) Reset() {
	*x = DiskCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskCountReq) ProtoMessage() {}

func (x *DiskCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskCountReq.ProtoReflect.Descriptor instead.
func (*DiskCountReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{95}
}

func (x *DiskCountReq) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type DiskCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        Code   `protobuf:"varint,1,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	DeviceCount uint64 `protobuf:"varint,2,opt,name=deviceCount,proto3" json:"deviceCount,omitempty"`
	DeviceUsed  uint64 `protobuf:"varint,3,opt,name=deviceUsed,proto3" json:"deviceUsed,omitempty"`
}

func (x *DiskCountResp) Reset() {
	*x = DiskCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskCountResp) ProtoMessage() {}

func (x *DiskCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskCountResp.ProtoReflect.Descriptor instead.
func (*DiskCountResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{96}
}

func (x *DiskCountResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *DiskCountResp) GetDeviceCount() uint64 {
	if x != nil {
		return x.DeviceCount
	}
	return 0
}

func (x *DiskCountResp) GetDeviceUsed() uint64 {
	if x != nil {
		return x.DeviceUsed
	}
	return 0
}

// 创建钱包地址 0 所有钱包，1 Fil钱包，2 ETH系列钱包
// "/box/createWallet/1.0.0"
type CreateWalletReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateWalletReq) Reset() {
	*x = CreateWalletReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletReq) ProtoMessage() {}

func (x *CreateWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletReq.ProtoReflect.Descriptor instead.
func (*CreateWalletReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{97}
}

func (x *CreateWalletReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateWalletReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 获取钱包地址 0 所有钱包，1 Fil钱包，2 ETH系列钱包
// "/box/getWallet/1.0.0"
type GetWalletReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetWalletReq) Reset() {
	*x = GetWalletReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletReq) ProtoMessage() {}

func (x *GetWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletReq.ProtoReflect.Descriptor instead.
func (*GetWalletReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{98}
}

func (x *GetWalletReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetWalletReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type WalletItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *WalletItem) Reset() {
	*x = WalletItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletItem) ProtoMessage() {}

func (x *WalletItem) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletItem.ProtoReflect.Descriptor instead.
func (*WalletItem) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{99}
}

func (x *WalletItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *WalletItem) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetWalletResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  Code          `protobuf:"varint,1,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Items []*WalletItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetWalletResp) Reset() {
	*x = GetWalletResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletResp) ProtoMessage() {}

func (x *GetWalletResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletResp.ProtoReflect.Descriptor instead.
func (*GetWalletResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{100}
}

func (x *GetWalletResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *GetWalletResp) GetItems() []*WalletItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 获取钱包地址的key 0 所有钱包，1 Fil钱包，2 ETH系列钱包
// "/box/getWalletKey/1.0.0"
type GetWalletKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetWalletKeyReq) Reset() {
	*x = GetWalletKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletKeyReq) ProtoMessage() {}

func (x *GetWalletKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletKeyReq.ProtoReflect.Descriptor instead.
func (*GetWalletKeyReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{101}
}

func (x *GetWalletKeyReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetWalletKeyReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetWalletKeyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       Code   `protobuf:"varint,1,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	AddressKey string `protobuf:"bytes,2,opt,name=addressKey,proto3" json:"addressKey,omitempty"`
}

func (x *GetWalletKeyResp) Reset() {
	*x = GetWalletKeyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletKeyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletKeyResp) ProtoMessage() {}

func (x *GetWalletKeyResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletKeyResp.ProtoReflect.Descriptor instead.
func (*GetWalletKeyResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{102}
}

func (x *GetWalletKeyResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *GetWalletKeyResp) GetAddressKey() string {
	if x != nil {
		return x.AddressKey
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
// 同步数据到FileCoin
// "/box/sync_fil/1.0.0"
type EnableFilReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce     uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Enable    bool   `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
	RelayHost string `protobuf:"bytes,4,opt,name=relayHost,proto3" json:"relayHost,omitempty"`
	MinerId   string `protobuf:"bytes,5,opt,name=minerId,proto3" json:"minerId,omitempty"`
	Price     string `protobuf:"bytes,6,opt,name=price,proto3" json:"price,omitempty"`
	SizeSum   int64  `protobuf:"varint,7,opt,name=sizeSum,proto3" json:"sizeSum,omitempty"`
}

func (x *EnableFilReq) Reset() {
	*x = EnableFilReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableFilReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableFilReq) ProtoMessage() {}

func (x *EnableFilReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableFilReq.ProtoReflect.Descriptor instead.
func (*EnableFilReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{103}
}

func (x *EnableFilReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *EnableFilReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *EnableFilReq) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *EnableFilReq) GetRelayHost() string {
	if x != nil {
		return x.RelayHost
	}
	return ""
}

func (x *EnableFilReq) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

func (x *EnableFilReq) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *EnableFilReq) GetSizeSum() int64 {
	if x != nil {
		return x.SizeSum
	}
	return 0
}

//============= Filecoin backup
//备份文件
// "/lotus/filecoinBackup"
type UploadFileToFilcoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpfsCid   string `protobuf:"bytes,1,opt,name=ipfsCid,proto3" json:"ipfsCid,omitempty"`
	Data      []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	FileSize  int64  `protobuf:"varint,3,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	BytesFrom int64  `protobuf:"varint,4,opt,name=bytes_from,json=bytesFrom,proto3" json:"bytes_from,omitempty"`
	PeerId    string `protobuf:"bytes,5,opt,name=peerId,proto3" json:"peerId,omitempty"`
}

func (x *UploadFileToFilcoinReq) Reset() {
	*x = UploadFileToFilcoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileToFilcoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileToFilcoinReq) ProtoMessage() {}

func (x *UploadFileToFilcoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileToFilcoinReq.ProtoReflect.Descriptor instead.
func (*UploadFileToFilcoinReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{104}
}

func (x *UploadFileToFilcoinReq) GetIpfsCid() string {
	if x != nil {
		return x.IpfsCid
	}
	return ""
}

func (x *UploadFileToFilcoinReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadFileToFilcoinReq) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *UploadFileToFilcoinReq) GetBytesFrom() int64 {
	if x != nil {
		return x.BytesFrom
	}
	return 0
}

func (x *UploadFileToFilcoinReq) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

//查询备份状态
// "/lotus/getBackUpStatus"
type GetBackUpStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpfsCid string `protobuf:"bytes,1,opt,name=ipfsCid,proto3" json:"ipfsCid,omitempty"`
}

func (x *GetBackUpStatusReq) Reset() {
	*x = GetBackUpStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBackUpStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackUpStatusReq) ProtoMessage() {}

func (x *GetBackUpStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackUpStatusReq.ProtoReflect.Descriptor instead.
func (*GetBackUpStatusReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{105}
}

func (x *GetBackUpStatusReq) GetIpfsCid() string {
	if x != nil {
		return x.IpfsCid
	}
	return ""
}

type GetBackUpStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     Code   `protobuf:"varint,1,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	DealCid  string `protobuf:"bytes,2,opt,name=dealCid,proto3" json:"dealCid,omitempty"`
	PieceCid string `protobuf:"bytes,3,opt,name=pieceCid,proto3" json:"pieceCid,omitempty"`
	Status   string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Verified bool   `protobuf:"varint,5,opt,name=Verified,proto3" json:"Verified,omitempty"`
	Duration uint64 `protobuf:"varint,6,opt,name=Duration,proto3" json:"Duration,omitempty"`
}

func (x *GetBackUpStatusResp) Reset() {
	*x = GetBackUpStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBackUpStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackUpStatusResp) ProtoMessage() {}

func (x *GetBackUpStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackUpStatusResp.ProtoReflect.Descriptor instead.
func (*GetBackUpStatusResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{106}
}

func (x *GetBackUpStatusResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *GetBackUpStatusResp) GetDealCid() string {
	if x != nil {
		return x.DealCid
	}
	return ""
}

func (x *GetBackUpStatusResp) GetPieceCid() string {
	if x != nil {
		return x.PieceCid
	}
	return ""
}

func (x *GetBackUpStatusResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetBackUpStatusResp) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *GetBackUpStatusResp) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// 获取miner
// "/api/getMiner"
type GetMinerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId string `protobuf:"bytes,1,opt,name=peerId,proto3" json:"peerId,omitempty"`
}

func (x *GetMinerReq) Reset() {
	*x = GetMinerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinerReq) ProtoMessage() {}

func (x *GetMinerReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinerReq.ProtoReflect.Descriptor instead.
func (*GetMinerReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{107}
}

func (x *GetMinerReq) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type GetMinerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  Code     `protobuf:"varint,1,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Miner []*Miner `protobuf:"bytes,2,rep,name=miner,proto3" json:"miner,omitempty"`
}

func (x *GetMinerResp) Reset() {
	*x = GetMinerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinerResp) ProtoMessage() {}

func (x *GetMinerResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinerResp.ProtoReflect.Descriptor instead.
func (*GetMinerResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{108}
}

func (x *GetMinerResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *GetMinerResp) GetMiner() []*Miner {
	if x != nil {
		return x.Miner
	}
	return nil
}

type Miner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerId   string `protobuf:"bytes,1,opt,name=MinerId,proto3" json:"MinerId,omitempty"`
	Storage   string `protobuf:"bytes,2,opt,name=Storage,proto3" json:"Storage,omitempty"`
	Price     string `protobuf:"bytes,3,opt,name=Price,proto3" json:"Price,omitempty"`
	RelayHost string `protobuf:"bytes,4,opt,name=RelayHost,proto3" json:"RelayHost,omitempty"`
}

func (x *Miner) Reset() {
	*x = Miner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Miner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Miner) ProtoMessage() {}

func (x *Miner) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Miner.ProtoReflect.Descriptor instead.
func (*Miner) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{109}
}

func (x *Miner) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

func (x *Miner) GetStorage() string {
	if x != nil {
		return x.Storage
	}
	return ""
}

func (x *Miner) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Miner) GetRelayHost() string {
	if x != nil {
		return x.RelayHost
	}
	return ""
}

///////////////////////////////////////////////////////////////////////
// 备份记录
// "/box/cidbackups/list/1.0.0"
type CidBackupsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Offset int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *CidBackupsListReq) Reset() {
	*x = CidBackupsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CidBackupsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CidBackupsListReq) ProtoMessage() {}

func (x *CidBackupsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CidBackupsListReq.ProtoReflect.Descriptor instead.
func (*CidBackupsListReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{110}
}

func (x *CidBackupsListReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *CidBackupsListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CidBackupsListReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CidBackupsListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CidBackupsListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MinerId     string `protobuf:"bytes,2,opt,name=minerId,proto3" json:"minerId,omitempty"`
	Price       string `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	CreatedAt   int64  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	FileCount   int64  `protobuf:"varint,5,opt,name=fileCount,proto3" json:"fileCount,omitempty"`
	SuccessFile int64  `protobuf:"varint,6,opt,name=successFile,proto3" json:"successFile,omitempty"`
	DealCid     string `protobuf:"bytes,7,opt,name=dealCid,proto3" json:"dealCid,omitempty"`
	FileSize    int64  `protobuf:"varint,8,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
}

func (x *CidBackupsListItem) Reset() {
	*x = CidBackupsListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CidBackupsListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CidBackupsListItem) ProtoMessage() {}

func (x *CidBackupsListItem) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CidBackupsListItem.ProtoReflect.Descriptor instead.
func (*CidBackupsListItem) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{111}
}

func (x *CidBackupsListItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CidBackupsListItem) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

func (x *CidBackupsListItem) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CidBackupsListItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CidBackupsListItem) GetFileCount() int64 {
	if x != nil {
		return x.FileCount
	}
	return 0
}

func (x *CidBackupsListItem) GetSuccessFile() int64 {
	if x != nil {
		return x.SuccessFile
	}
	return 0
}

func (x *CidBackupsListItem) GetDealCid() string {
	if x != nil {
		return x.DealCid
	}
	return ""
}

func (x *CidBackupsListItem) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type CidBackupsListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32                `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code                  `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string                `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total int32                 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Items []*CidBackupsListItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CidBackupsListResp) Reset() {
	*x = CidBackupsListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CidBackupsListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CidBackupsListResp) ProtoMessage() {}

func (x *CidBackupsListResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CidBackupsListResp.ProtoReflect.Descriptor instead.
func (*CidBackupsListResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{112}
}

func (x *CidBackupsListResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *CidBackupsListResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *CidBackupsListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CidBackupsListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CidBackupsListResp) GetItems() []*CidBackupsListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 备份记录
// "/box/backupcount/list/1.0.0"
type BackupCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *BackupCountReq) Reset() {
	*x = BackupCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupCountReq) ProtoMessage() {}

func (x *BackupCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupCountReq.ProtoReflect.Descriptor instead.
func (*BackupCountReq) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{113}
}

func (x *BackupCountReq) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *BackupCountReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type BackupCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Code  Code   `protobuf:"varint,2,opt,name=code,proto3,enum=pb.Code" json:"code,omitempty"`
	Msg   string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Total int32  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *BackupCountResp) Reset() {
	*x = BackupCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupCountResp) ProtoMessage() {}

func (x *BackupCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_box_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupCountResp.ProtoReflect.Descriptor instead.
func (*BackupCountResp) Descriptor() ([]byte, []int) {
	return file_box_proto_rawDescGZIP(), []int{114}
}

func (x *BackupCountResp) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *BackupCountResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *BackupCountResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BackupCountResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_box_proto protoreflect.FileDescriptor

var file_box_proto_rawDesc = []byte{
	0x0a, 0x09, 0x62, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22,
	0x4a, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x42,
	0x6f, 0x64, 0x79, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x42, 0x6f, 0x64, 0x79, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x5f, 0x0a, 0x09, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x6f, 0x64, 0x79,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x42, 0x6f,
	0x64, 0x79, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x52, 0x0a, 0x0a,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x1f, 0x0a, 0x07, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x22, 0x20, 0x0a, 0x08, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x22, 0x3e, 0x0a, 0x0e, 0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x0f, 0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x90,
	0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x73, 0x65, 0x64,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x46,
	0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x46, 0x69,
	0x6c, 0x22, 0x67, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x3e, 0x0a, 0x0e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xc7, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x64, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x24, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6f, 0x0a, 0x0d, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x67, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x08,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x24, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7e, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x39, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x97, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x39, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x72, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x73, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c,
	0x64, 0x50, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x22,
	0x4f, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x56, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x70, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x22, 0x6b, 0x0a, 0x0d, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x53, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x0e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x6b, 0x0a, 0x0d, 0x53, 0x63, 0x61, 0x6e, 0x51, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x79, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0xf2, 0x03, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x64, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f,
	0x72, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x6f, 0x72, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x0c, 0x4e,
	0x65, 0x77, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x53, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x64, 0x35, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22,
	0xad, 0x01, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x9c, 0x01, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9f,
	0x02, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x72, 0x4d, 0x61, 0x73,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x72, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x45, 0x71, 0x75, 0x61,
	0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x45, 0x71, 0x75, 0x61, 0x6c,
	0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x73,
	0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x70, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65,
	0x77, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x77,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65,
	0x77, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65,
	0x77, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x53, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x6e,
	0x73, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0xa9, 0x01,
	0x0a, 0x0b, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x0e, 0x52, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x50, 0x0a, 0x10, 0x52, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x51, 0x0a, 0x11, 0x52,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xa4,
	0x01, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x65, 0x6e, 0x64, 0x41, 0x74, 0x22, 0x56, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x6e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x57, 0x0a,
	0x11, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xcc, 0x02, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x72, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x72, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0xa3, 0x03, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x75, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x0d,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x58,
	0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xa8, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x64, 0x69, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x22, 0x7c, 0x0a, 0x14,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x14, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45,
	0x0a, 0x17, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6e, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x73, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x13, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33,
	0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x62, 0x6f,
	0x6f, 0x6b, 0x73, 0x22, 0x53, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x16, 0x41, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x33, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x62,
	0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x78, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0x9f,
	0x02, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x64, 0x35, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73,
	0x22, 0xa0, 0x01, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x50, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0x69, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x69, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64,
	0x35, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x69, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x6a, 0x0a, 0x0e,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x7d, 0x0a, 0x0f, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x79, 0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x74, 0x0a,
	0x0e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x59, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xac,
	0x01, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x92, 0x01,
	0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb9, 0x01,
	0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x48, 0x0a, 0x0a, 0x53, 0x79, 0x6e,
	0x63, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x0c, 0x42, 0x6f, 0x78, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x57, 0x0a, 0x0d, 0x42, 0x6f, 0x78, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x25, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x76, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x22,
	0x26, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x64, 0x22, 0x3b, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x3a, 0x0a, 0x0a, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x53, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x41, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x50, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x22, 0xba, 0x01, 0x0a, 0x0c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x46, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x6c, 0x61, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x7a, 0x65,
	0x53, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x69, 0x7a, 0x65, 0x53,
	0x75, 0x6d, 0x22, 0x99, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x6f, 0x46, 0x69, 0x6c, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x70, 0x66, 0x73, 0x43, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x70, 0x66, 0x73, 0x43, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2e,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x70, 0x66, 0x73, 0x43, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x70, 0x66, 0x73, 0x43, 0x69, 0x64, 0x22, 0xb9,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x43, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x43, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x25, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1f, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x22, 0x6f, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x73,
	0x74, 0x22, 0x6d, 0x0a, 0x11, 0x43, 0x69, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0xe8, 0x01, 0x0a, 0x12, 0x43, 0x69, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x46, 0x69,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x43, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x43, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x12,
	0x43, 0x69, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x69, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3c, 0x0a, 0x0e,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6d, 0x0a, 0x0f, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x2a, 0xff, 0x02, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x62, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6f, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x09, 0x12, 0x11, 0x0a,
	0x0d, 0x4e, 0x6f, 0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x10, 0x0a,
	0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x10, 0x0e, 0x12, 0x11, 0x0a,
	0x0d, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x0f,
	0x12, 0x14, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x10, 0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x46, 0x69, 0x6c, 0x65, 0x10, 0x11, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x55, 0x70, 0x10, 0x12, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x64, 0x35, 0x49, 0x73, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x10, 0x13, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x73,
	0x75, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x10, 0x14, 0x42, 0x07, 0x5a, 0x05, 0x2e,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_box_proto_rawDescOnce sync.Once
	file_box_proto_rawDescData = file_box_proto_rawDesc
)

func file_box_proto_rawDescGZIP() []byte {
	file_box_proto_rawDescOnce.Do(func() {
		file_box_proto_rawDescData = protoimpl.X.CompressGZIP(file_box_proto_rawDescData)
	})
	return file_box_proto_rawDescData
}

var file_box_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_box_proto_msgTypes = make([]protoimpl.MessageInfo, 115)
var file_box_proto_goTypes = []interface{}{
	(Code)(0),                       // 0: pb.Code
	(*RelayReq)(nil),                // 1: pb.RelayReq
	(*RelayResp)(nil),               // 2: pb.RelayResp
	(*CommonResp)(nil),              // 3: pb.CommonResp
	(*PingReq)(nil),                 // 4: pb.PingReq
	(*PingResp)(nil),                // 5: pb.PingResp
	(*PeerAddressReq)(nil),          // 6: pb.PeerAddressReq
	(*PeerAddressResp)(nil),         // 7: pb.PeerAddressResp
	(*User)(nil),                    // 8: pb.User
	(*DiskSpace)(nil),               // 9: pb.DiskSpace
	(*DeviceStateReq)(nil),          // 10: pb.DeviceStateReq
	(*DeviceStateResp)(nil),         // 11: pb.DeviceStateResp
	(*ActivateReq)(nil),             // 12: pb.ActivateReq
	(*ActivateResp)(nil),            // 13: pb.ActivateResp
	(*ForgetPassReq)(nil),           // 14: pb.ForgetPassReq
	(*ForgetPassResp)(nil),          // 15: pb.ForgetPassResp
	(*LoginReq)(nil),                // 16: pb.LoginReq
	(*LoginResp)(nil),               // 17: pb.LoginResp
	(*AddUserReq)(nil),              // 18: pb.AddUserReq
	(*UserInfoReq)(nil),             // 19: pb.UserInfoReq
	(*UserInfoResp)(nil),            // 20: pb.UserInfoResp
	(*UserListReq)(nil),             // 21: pb.UserListReq
	(*UserListResp)(nil),            // 22: pb.UserListResp
	(*UpdatePasswordReq)(nil),       // 23: pb.UpdatePasswordReq
	(*UserRenameReq)(nil),           // 24: pb.UserRenameReq
	(*GetUserAvatarReq)(nil),        // 25: pb.GetUserAvatarReq
	(*GetUserAvatarResp)(nil),       // 26: pb.GetUserAvatarResp
	(*UpdateUserAvatarReq)(nil),     // 27: pb.UpdateUserAvatarReq
	(*ResetPasswordReq)(nil),        // 28: pb.ResetPasswordReq
	(*EnableUserReq)(nil),           // 29: pb.EnableUserReq
	(*DeleteUserReq)(nil),           // 30: pb.DeleteUserReq
	(*ChangeSpaceReq)(nil),          // 31: pb.ChangeSpaceReq
	(*ScanQrcodeReq)(nil),           // 32: pb.ScanQrcodeReq
	(*GetTokenByQrcodeReq)(nil),     // 33: pb.GetTokenByQrcodeReq
	(*GetTokenByQrcodeResp)(nil),    // 34: pb.GetTokenByQrcodeResp
	(*FileItem)(nil),                // 35: pb.FileItem
	(*NewFolderReq)(nil),            // 36: pb.NewFolderReq
	(*NewFolderResp)(nil),           // 37: pb.NewFolderResp
	(*UploadFileReq)(nil),           // 38: pb.UploadFileReq
	(*DownloadFileReq)(nil),         // 39: pb.DownloadFileReq
	(*DownloadFileResp)(nil),        // 40: pb.DownloadFileResp
	(*FileListReq)(nil),             // 41: pb.FileListReq
	(*FileListResp)(nil),            // 42: pb.FileListResp
	(*FileRenameReq)(nil),           // 43: pb.FileRenameReq
	(*FileDeleteReq)(nil),           // 44: pb.FileDeleteReq
	(*FileMoveReq)(nil),             // 45: pb.FileMoveReq
	(*FileCopyReq)(nil),             // 46: pb.FileCopyReq
	(*FileStarReq)(nil),             // 47: pb.FileStarReq
	(*FileUnstarReq)(nil),           // 48: pb.FileUnstarReq
	(*RecycleItem)(nil),             // 49: pb.RecycleItem
	(*RecycleListReq)(nil),          // 50: pb.RecycleListReq
	(*RecycleListResp)(nil),         // 51: pb.RecycleListResp
	(*RecycleDeleteReq)(nil),        // 52: pb.RecycleDeleteReq
	(*RecycleRestoreReq)(nil),       // 53: pb.RecycleRestoreReq
	(*FileShareReq)(nil),            // 54: pb.FileShareReq
	(*FileUnShareReq)(nil),          // 55: pb.FileUnShareReq
	(*FileCloseShareReq)(nil),       // 56: pb.FileCloseShareReq
	(*ShareListReq)(nil),            // 57: pb.ShareListReq
	(*ShareItem)(nil),               // 58: pb.ShareItem
	(*ShareListResp)(nil),           // 59: pb.ShareListResp
	(*UserShareListReq)(nil),        // 60: pb.UserShareListReq
	(*UserShareItem)(nil),           // 61: pb.UserShareItem
	(*UserShareListResp)(nil),       // 62: pb.UserShareListResp
	(*FileEditShareReq)(nil),        // 63: pb.FileEditShareReq
	(*AddressbookBackupReq)(nil),    // 64: pb.AddressbookBackupReq
	(*AddressbookDeleteReq)(nil),    // 65: pb.AddressbookDeleteReq
	(*AddressbookDeleteAllReq)(nil), // 66: pb.AddressbookDeleteAllReq
	(*AddressbookListReq)(nil),      // 67: pb.AddressbookListReq
	(*Addressbook)(nil),             // 68: pb.Addressbook
	(*AddressbookListResp)(nil),     // 69: pb.AddressbookListResp
	(*AppointAddressListReq)(nil),   // 70: pb.AppointAddressListReq
	(*AppointAddressListResp)(nil),  // 71: pb.AppointAddressListResp
	(*AppointFileListReq)(nil),      // 72: pb.AppointFileListReq
	(*AppointFileListItem)(nil),     // 73: pb.AppointFileListItem
	(*AppointFileListResp)(nil),     // 74: pb.AppointFileListResp
	(*FileBackupListReq)(nil),       // 75: pb.FileBackupListReq
	(*FileBackupListResp)(nil),      // 76: pb.FileBackupListResp
	(*SearchFileMd5Req)(nil),        // 77: pb.SearchFileMd5Req
	(*SearchFileMd5Resp)(nil),       // 78: pb.SearchFileMd5Resp
	(*FileRecordReq)(nil),           // 79: pb.FileRecordReq
	(*BackupsListReq)(nil),          // 80: pb.BackupsListReq
	(*BackupsListItem)(nil),         // 81: pb.BackupsListItem
	(*BackupsListResp)(nil),         // 82: pb.BackupsListResp
	(*BackupsAddReq)(nil),           // 83: pb.BackupsAddReq
	(*FileLogListReq)(nil),          // 84: pb.FileLogListReq
	(*FileLogListResp)(nil),         // 85: pb.FileLogListResp
	(*SyncListReq)(nil),             // 86: pb.SyncListReq
	(*SyncListItem)(nil),            // 87: pb.SyncListItem
	(*SyncListResp)(nil),            // 88: pb.SyncListResp
	(*SyncAddReq)(nil),              // 89: pb.SyncAddReq
	(*SyncEditReq)(nil),             // 90: pb.SyncEditReq
	(*SyncDelReq)(nil),              // 91: pb.SyncDelReq
	(*BoxUpdateReq)(nil),            // 92: pb.BoxUpdateReq
	(*BoxUpdateResp)(nil),           // 93: pb.BoxUpdateResp
	(*DeviceInfoReq)(nil),           // 94: pb.DeviceInfoReq
	(*DeviceInfoResp)(nil),          // 95: pb.DeviceInfoResp
	(*DiskCountReq)(nil),            // 96: pb.DiskCountReq
	(*DiskCountResp)(nil),           // 97: pb.DiskCountResp
	(*CreateWalletReq)(nil),         // 98: pb.CreateWalletReq
	(*GetWalletReq)(nil),            // 99: pb.GetWalletReq
	(*WalletItem)(nil),              // 100: pb.WalletItem
	(*GetWalletResp)(nil),           // 101: pb.GetWalletResp
	(*GetWalletKeyReq)(nil),         // 102: pb.GetWalletKeyReq
	(*GetWalletKeyResp)(nil),        // 103: pb.GetWalletKeyResp
	(*EnableFilReq)(nil),            // 104: pb.EnableFilReq
	(*UploadFileToFilcoinReq)(nil),  // 105: pb.UploadFileToFilcoinReq
	(*GetBackUpStatusReq)(nil),      // 106: pb.GetBackUpStatusReq
	(*GetBackUpStatusResp)(nil),     // 107: pb.GetBackUpStatusResp
	(*GetMinerReq)(nil),             // 108: pb.GetMinerReq
	(*GetMinerResp)(nil),            // 109: pb.GetMinerResp
	(*Miner)(nil),                   // 110: pb.Miner
	(*CidBackupsListReq)(nil),       // 111: pb.CidBackupsListReq
	(*CidBackupsListItem)(nil),      // 112: pb.CidBackupsListItem
	(*CidBackupsListResp)(nil),      // 113: pb.CidBackupsListResp
	(*BackupCountReq)(nil),          // 114: pb.BackupCountReq
	(*BackupCountResp)(nil),         // 115: pb.BackupCountResp
}
var file_box_proto_depIdxs = []int32{
	0,   // 0: pb.CommonResp.code:type_name -> pb.Code
	0,   // 1: pb.PeerAddressResp.code:type_name -> pb.Code
	0,   // 2: pb.DeviceStateResp.code:type_name -> pb.Code
	0,   // 3: pb.ActivateResp.code:type_name -> pb.Code
	8,   // 4: pb.ActivateResp.userInfo:type_name -> pb.User
	0,   // 5: pb.ForgetPassResp.code:type_name -> pb.Code
	8,   // 6: pb.ForgetPassResp.userInfo:type_name -> pb.User
	0,   // 7: pb.LoginResp.code:type_name -> pb.Code
	8,   // 8: pb.LoginResp.userInfo:type_name -> pb.User
	0,   // 9: pb.UserInfoResp.code:type_name -> pb.Code
	8,   // 10: pb.UserInfoResp.user:type_name -> pb.User
	9,   // 11: pb.UserInfoResp.space:type_name -> pb.DiskSpace
	0,   // 12: pb.UserListResp.code:type_name -> pb.Code
	8,   // 13: pb.UserListResp.user:type_name -> pb.User
	0,   // 14: pb.GetUserAvatarResp.code:type_name -> pb.Code
	0,   // 15: pb.GetTokenByQrcodeResp.code:type_name -> pb.Code
	0,   // 16: pb.NewFolderResp.code:type_name -> pb.Code
	0,   // 17: pb.DownloadFileResp.code:type_name -> pb.Code
	0,   // 18: pb.FileListResp.code:type_name -> pb.Code
	35,  // 19: pb.FileListResp.files:type_name -> pb.FileItem
	0,   // 20: pb.RecycleListResp.code:type_name -> pb.Code
	49,  // 21: pb.RecycleListResp.items:type_name -> pb.RecycleItem
	0,   // 22: pb.ShareListResp.code:type_name -> pb.Code
	58,  // 23: pb.ShareListResp.items:type_name -> pb.ShareItem
	0,   // 24: pb.UserShareListResp.code:type_name -> pb.Code
	61,  // 25: pb.UserShareListResp.items:type_name -> pb.UserShareItem
	0,   // 26: pb.AddressbookListResp.code:type_name -> pb.Code
	68,  // 27: pb.AddressbookListResp.addressbooks:type_name -> pb.Addressbook
	0,   // 28: pb.AppointAddressListResp.code:type_name -> pb.Code
	68,  // 29: pb.AppointAddressListResp.addressbooks:type_name -> pb.Addressbook
	0,   // 30: pb.AppointFileListResp.code:type_name -> pb.Code
	73,  // 31: pb.AppointFileListResp.items:type_name -> pb.AppointFileListItem
	0,   // 32: pb.FileBackupListResp.code:type_name -> pb.Code
	73,  // 33: pb.FileBackupListResp.items:type_name -> pb.AppointFileListItem
	0,   // 34: pb.SearchFileMd5Resp.code:type_name -> pb.Code
	0,   // 35: pb.BackupsListResp.code:type_name -> pb.Code
	81,  // 36: pb.BackupsListResp.items:type_name -> pb.BackupsListItem
	0,   // 37: pb.FileLogListResp.code:type_name -> pb.Code
	0,   // 38: pb.SyncListResp.code:type_name -> pb.Code
	87,  // 39: pb.SyncListResp.items:type_name -> pb.SyncListItem
	0,   // 40: pb.BoxUpdateResp.code:type_name -> pb.Code
	0,   // 41: pb.DeviceInfoResp.code:type_name -> pb.Code
	0,   // 42: pb.DiskCountResp.code:type_name -> pb.Code
	0,   // 43: pb.GetWalletResp.code:type_name -> pb.Code
	100, // 44: pb.GetWalletResp.items:type_name -> pb.WalletItem
	0,   // 45: pb.GetWalletKeyResp.code:type_name -> pb.Code
	0,   // 46: pb.GetBackUpStatusResp.code:type_name -> pb.Code
	0,   // 47: pb.GetMinerResp.code:type_name -> pb.Code
	110, // 48: pb.GetMinerResp.miner:type_name -> pb.Miner
	0,   // 49: pb.CidBackupsListResp.code:type_name -> pb.Code
	112, // 50: pb.CidBackupsListResp.items:type_name -> pb.CidBackupsListItem
	0,   // 51: pb.BackupCountResp.code:type_name -> pb.Code
	52,  // [52:52] is the sub-list for method output_type
	52,  // [52:52] is the sub-list for method input_type
	52,  // [52:52] is the sub-list for extension type_name
	52,  // [52:52] is the sub-list for extension extendee
	0,   // [0:52] is the sub-list for field type_name
}

func init() { file_box_proto_init() }
func file_box_proto_init() {
	if File_box_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_box_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskSpace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPassReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPassResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRenameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAvatarResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeSpaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanQrcodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenByQrcodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenByQrcodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewFolderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewFolderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileRenameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMoveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileCopyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileStarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUnstarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecycleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecycleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecycleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecycleDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecycleRestoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileShareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUnShareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileCloseShareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserShareListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserShareItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserShareListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileEditShareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressbookBackupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressbookDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressbookDeleteAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressbookListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Addressbook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressbookListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointAddressListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointAddressListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointFileListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointFileListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointFileListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileBackupListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileBackupListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFileMd5Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFileMd5Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupsListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupsListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupsAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncEditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletKeyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableFilReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileToFilcoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBackUpStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBackUpStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Miner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CidBackupsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CidBackupsListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CidBackupsListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_box_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   115,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_box_proto_goTypes,
		DependencyIndexes: file_box_proto_depIdxs,
		EnumInfos:         file_box_proto_enumTypes,
		MessageInfos:      file_box_proto_msgTypes,
	}.Build()
	File_box_proto = out.File
	file_box_proto_rawDesc = nil
	file_box_proto_goTypes = nil
	file_box_proto_depIdxs = nil
}
